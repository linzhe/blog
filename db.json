{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"6974ddb0953597b845d10c3aec9016f9ed161fbb","modified":1470406777000},{"_id":"source/404.html","hash":"3de330b9cac1b5b785be80951962f92e55746976","modified":1470406777000},{"_id":"source/CNAME","hash":"9a5b6f8f377bf245cfe23bea2445c6998c95f162","modified":1470406777000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1470408150000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1470408150000},{"_id":"themes/next/_config.yml","hash":"7325356b73c2cc2c217ef2f41416354de144a01c","modified":1470499486000},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1470408150000},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1470408150000},{"_id":"themes/next/package.json","hash":"2d0d128905e41a0d053d60e757ec663d2b05ad8f","modified":1470408150000},{"_id":"source/_posts/Setting-up-a-Github-Pages-blog-with-Hexo.md","hash":"c0885cb9ab995fbaed9456731abc03a1cc70ae02","modified":1470406777000},{"_id":"source/_posts/build-recommendtion-system.md","hash":"a70c723406f595492531d45a70d2d683b2e8c1ab","modified":1470406777000},{"_id":"source/_posts/cache-server-start-up.md","hash":"e31a7d2fa2cc74136f45c82e670edefccdb7669c","modified":1470406777000},{"_id":"source/_posts/markdown-cheatsheet.md","hash":"634489e615e12801bc430e7870417f97aa5a237d","modified":1470406777000},{"_id":"source/_posts/spark-mllib-regularizer.md","hash":"97cc15006626df0d13746d5b46e67567a1f0609d","modified":1470499743000},{"_id":"source/_posts/spark-rdd.md","hash":"7eb6ca96c668bf224f1e7798da0e7a39740dfcb4","modified":1470409765000},{"_id":"source/_posts/system-log-extract-from-chromium-code-md.md","hash":"3ffe57aa01846565077c5e2261c9503a5a9e97e6","modified":1470406777000},{"_id":"source/about/index.md","hash":"f1431d847525538df15f4466150fdae267a1abfc","modified":1470406777000},{"_id":"source/categories/index.md","hash":"a366f938d7e22e7af4e726281d037b8e2f647aea","modified":1470406777000},{"_id":"source/tags/index.md","hash":"33cc92a077f1b2d8683d7b9bbcad73cea811b8f2","modified":1470406777000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1470408150000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1470408150000},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1470408150000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1470408150000},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1470408150000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1470408150000},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1470408150000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1470408150000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1470408150000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1470408150000},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1470408150000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1470408150000},{"_id":"themes/next/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1470408150000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1470408150000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1470408150000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1470408150000},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1470408150000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1470408150000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1470408150000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1470408150000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1470408150000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1470408150000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1470408150000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470408150000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1470408150000},{"_id":"themes/next/layout/_macro/post.swig","hash":"1ca03011bed92614832b1343b65be92183957dc5","modified":1470408150000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1470408150000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"b883289054ee54a374caad5d4883591beb94bd8b","modified":1470408150000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1470408150000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"b73f9443bee2d3ea383aad52e49ffca8aa97dcc2","modified":1470408150000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1470408150000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"0ce71d8322ea7dea82d9371fa2fe13949aa870e3","modified":1470408150000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b0c495b8154ef8b2d2cb0a554e164ff22cdc962","modified":1470408150000},{"_id":"themes/next/layout/_partials/header.swig","hash":"eb028685cb3c329537bbced06c063d23e6a33817","modified":1470408150000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1470408150000},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1470408150000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1470408150000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1470408150000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1470408150000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/.npmignore","hash":"d9a1f6432f1be0351e2bc3e16cf5e3658283ddbf","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/LICENSE","hash":"1af810604d6faa6c3d2597557150952d85d98407","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/README.md","hash":"196b7ef1279ea10325cc6e92f7cb1d7dc0eec187","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/index.js","hash":"7df7ea4a2265301644879c9ded9a6e78bb006448","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/package.json","hash":"bb4659020935cec3c5623875f91d45326b06165c","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/search.ejs","hash":"4d0b7f77d65fdf0cea6d42f5451fd93d8dc39fbf","modified":1470408150000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1470408150000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1470408150000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1470408150000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1470408150000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1470408150000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1470408150000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1470408150000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1470408150000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1470408150000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1470408150000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1470408150000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1470408150000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1470408150000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1470408150000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1470408150000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1470408150000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1470408150000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470408150000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470408150000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470408150000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470408150000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470408150000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470408150000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470408150000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1470408150000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1470408150000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1470408150000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1470408150000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1470408150000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1470408150000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1470408150000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1470408150000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1470408150000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1470408150000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1470408150000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1470408150000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"7f7148c8f52e4d3cfc070d964160362179fa8e91","modified":1470408150000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1470408150000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1470408150000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/lib/generator.js","hash":"3f51433c0cc2c340007b35ce781b85c676761758","modified":1470408150000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1470408150000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1470408150000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1470408150000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1470408150000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1470408150000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1470408150000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1470408150000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1470408150000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1470408150000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1470408150000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1470408150000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1470408150000},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1470408150000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1470408150000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1470408150000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1470408150000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1470408150000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1470408150000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1470408150000},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1470408150000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1470408150000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1470408150000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1470408150000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1470408150000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1470408150000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1470408150000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1470408150000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1470408150000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1470408150000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1470408150000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1470408150000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1470408150000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1470408150000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/.gitmodules","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470408150000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1470408150000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1470408150000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1470408150000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"f9c6ee91c2a615edd8ca26edcc8a66b71883c238","modified":1470408150000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1470408150000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1470408150000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1470408150000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1470408150000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"bff3b18f56175c53f3bc6d733166c4d998e08732","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/utils-merge/README.md","hash":"f2fbda7e38a145f2c791bf85f054626e4702e503","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/utils-merge/LICENSE","hash":"8f83f2073e6d25b6d53251f597c01ac7d18d12cf","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/utils-merge/.travis.yml","hash":"ef071f064c74d03dcaa32b914457a8efeef786e4","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/utils-merge/index.js","hash":"77759a680bd22cacb94bdc438ed6250eeb10e50a","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/utils-merge/package.json","hash":"d2be294667539761c3f3148b64e7823e2971f73a","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/.npmignore","hash":"f20aac0f0abd2abe222a1dfc9a65303694db8c60","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/.travis.yml","hash":"7b76b5696d88f9f7f5f2e6f8dad2af14d227d826","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/History.md","hash":"91c90c25ebed8fe8a0a78202362b23c7ce2d1552","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/Makefile","hash":"d0ebcd7407d10f34b158bde26c087823b7f66ac7","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/Readme.md","hash":"e771cccf0a192ffb85f1b3fe8f5c1560eb875c3f","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/benchmark.js","hash":"9cda2f8eaaadf524e15fdcb8719cfb8cfb07665d","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/ejs.min.js","hash":"8f755c89d7057e1067ba6653b90f8c758ebf73e0","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/ejs.js","hash":"2f81e75490d194c8e4d4ee2ce45d59b7471b1bc1","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/index.js","hash":"fe96bab13b61573b071d4bf94307845d99fdfb63","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/package.json","hash":"f4124ce1917e1a8901d310ad75e470695864687b","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1470408150000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1470408150000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1470408150000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1470408150000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1470408150000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1470408150000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1470408150000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1470408150000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1470408150000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1470408150000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1470408150000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1470408150000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1470408150000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1470408150000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1470408150000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1470408150000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1470408150000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1470408150000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1470408150000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/examples/functions.ejs","hash":"5803f1d7af0e448fea4ad8d554f650a35a19e3eb","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/examples/client.html","hash":"ebb66398695c7400519405c23ce698bb1be13c1e","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/examples/list.ejs","hash":"0068d51e729f234ebbaefc5f1d18a007e4b64ffb","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/examples/functions.js","hash":"08d4fa435832ed6a574acc1a9a07c2e6d34a9a26","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/examples/list.js","hash":"54cbd7bf086d1002aa94e534883c13f05960c23c","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/support/compile.js","hash":"ff3dbf545202da0ca5635dffd8fe0c85cacfcb9a","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/lib/ejs.js","hash":"cb3c8e8267e98a68935272600d90eef7b3bdd806","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/lib/filters.js","hash":"d9feedb8345d28e91b352ee27f3f6f2b754f12e6","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/lib/utils.js","hash":"b210c38a459ef429bb5a8ef153995265760eb7fd","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/ejs.js","hash":"5b847e4ba8af224c586667b482f4ce30195e329a","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1470408150000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1470408150000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1470408150000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1470408150000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/backslash.ejs","hash":"18a070d30ad4cc26df5f174b9578c1f68416aaf4","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/backslash.html","hash":"18a070d30ad4cc26df5f174b9578c1f68416aaf4","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/comments.ejs","hash":"e3d2f0898f2700a542990cef8c498256498e4620","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/comments.html","hash":"a2d69055bfef06ffc6ea30194c5be6f28011c5fc","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/double-quote.ejs","hash":"ac031342a3590e9615daa9c922714fca0551f449","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/double-quote.html","hash":"23371722e089bb10145c0f0fc0608051d644b10d","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/error.ejs","hash":"5e827a7ad547bc53fc41537c2e81710b84cf5ed5","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/error.out","hash":"bfce2934f00f3c76e9e98af8f10ae078788bb1e7","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/fail.ejs","hash":"c65363f5098ea72604a4a5c5fd84dcf82bdd4f60","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/include.css.ejs","hash":"a7df2fa04ad5af8b2f9433d92e187b6124043bb2","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/include.css.html","hash":"7ec5f5acb61d2010d80beb311dfb2c5e088032fc","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/include.ejs","hash":"e69725c21712fc289225eec65e0a74e1d8597dc8","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/include.html","hash":"4b1bee0563390b68865927eff23147ce617e9a4f","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/menu.ejs","hash":"436d0251cdca42ce544662bec60209d9478a9473","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/menu.html","hash":"e269f3027bf86b95c9be38489756519469434100","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/messed.ejs","hash":"a65c9ec2a966095af55b41300ab53944ab0e1ccc","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/messed.html","hash":"b40b47540d56db242f9fe02a0f92c380606684aa","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/newlines.ejs","hash":"6b52582848f9568a2c53b5f1e0b9add63a6a8315","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/newlines.html","hash":"4b1bee0563390b68865927eff23147ce617e9a4f","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/no.newlines.ejs","hash":"ccadc859e7bd160ee217dc8633ebb4f3232522cd","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/no.newlines.html","hash":"2f42658ce62882e75a8cc52fa2bf7e49a16d0226","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/para.ejs","hash":"4c20544a8937c1db84b437e441888e9155a946a9","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/pet.ejs","hash":"39438a2b5d153c86969393b7aa5a67a8136dfdc8","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/single-quote.ejs","hash":"7069bea2ecb49d15f63ee15c32ef68e42879ef38","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/single-quote.html","hash":"d232931918d3a6cf348aa634290a4e6cfb824eef","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/style.css","hash":"492f69267cc97a2b345fee1c3134fe415830fffc","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/user.ejs","hash":"a9a1f04a73755c23cb3e1cc9f3d01dbc54482a93","modified":1470408150000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/includes/menu-item.ejs","hash":"354d594133b9dbf03b5bf077828c249bb3c5c8f6","modified":1470408150000},{"_id":"themes/next/node_modules/hexo-generator-search/node_modules/ejs/test/fixtures/includes/menu/item.ejs","hash":"da30c245c5612951ef69ca4c81cbc69cf51faec8","modified":1470408150000},{"_id":"public/atom.xml","hash":"0f7b541c83afba37c32cb9690dae7d3b35855bb0","modified":1470499229877},{"_id":"public/404.html","hash":"095a8a0ecb40ba757faeaab25dfac997901c6145","modified":1470499507244},{"_id":"public/about/index.html","hash":"db8b5e75f1a55dbadf2225e99dd05a832ef01183","modified":1470499507244},{"_id":"public/tags/index.html","hash":"29c026b679bf5129e2684b31319057ca53301d98","modified":1470499507245},{"_id":"public/categories/index.html","hash":"28cc1ffc8e70c6995a341ceba2361554128acfbd","modified":1470499507244},{"_id":"public/archives/2016/08/index.html","hash":"6a1213bdca4d9d751d245480dace7a2648951d2c","modified":1470499507245},{"_id":"public/categories/github/index.html","hash":"333d287417a0b0c2e8fef77fabbd2daa9363109b","modified":1470499507245},{"_id":"public/categories/cache-server/index.html","hash":"7985ef609e9a9850b2f4c037dab2e29ae8c7027f","modified":1470499507245},{"_id":"public/categories/Note/index.html","hash":"6b743e1b18988291aa3ef0addc8ab1de05b43f1a","modified":1470499507245},{"_id":"public/categories/Spark/index.html","hash":"33050ef3666be80f6fc1d3ca5e130249e2bb7aa0","modified":1470499507245},{"_id":"public/tags/Markdown/index.html","hash":"3a7909424cf37be0365a1867be8170cf858b0942","modified":1470499507245},{"_id":"public/tags/github/index.html","hash":"466ed42bd3bb3d747e74c4ac13dcc9752ccfb8bd","modified":1470499507245},{"_id":"public/tags/推荐系统/index.html","hash":"b1f3ab41f2b9f4aaf9ae644d86c8d0ca214a22f5","modified":1470499507245},{"_id":"public/tags/leveldb/index.html","hash":"57bd409f9398ad6b6de4bc4f61389b0d3f8b3b2a","modified":1470499507245},{"_id":"public/tags/redis/index.html","hash":"2224f99d7069872aabaef42725a9f35c325c5d04","modified":1470499507245},{"_id":"public/tags/cache-server/index.html","hash":"8aa2b3eae770194273ba87fbb14d3b9a2ad42ba3","modified":1470499507245},{"_id":"public/tags/Spark/index.html","hash":"27a875879a1b6347bdb2c8c0e07b872a9057e5cb","modified":1470499507245},{"_id":"public/2016/08/04/spark-rdd/index.html","hash":"0df62aeafde1986edd2eef8a3d32cbe97dfe9242","modified":1470499507245},{"_id":"public/2016/07/15/system-log-extract-from-chromium-code-md/index.html","hash":"32688979b2a1a106627ebde98c429dcd5c0e369e","modified":1470499507245},{"_id":"public/2016/07/14/cache-server-start-up/index.html","hash":"ccbc6e80f4b62c3d2bf8a20b5b61eeaaf954de23","modified":1470499507245},{"_id":"public/2016/07/10/build-recommendtion-system/index.html","hash":"a2e666f1bc08988321577bfa17649715e9d0ce59","modified":1470499507245},{"_id":"public/2016/07/10/Setting-up-a-Github-Pages-blog-with-Hexo/index.html","hash":"fa04dccbd1e55f9f039ffbca23317900bb4f057c","modified":1470499507245},{"_id":"public/2016/07/09/markdown-cheatsheet/index.html","hash":"51448d2c9546d736c593be72414c4ee8b496fc77","modified":1470499507245},{"_id":"public/archives/index.html","hash":"a920632d03cc3c9777afb67065a238bd241ab7ed","modified":1470499507245},{"_id":"public/archives/2016/index.html","hash":"138e1e613c2d1528495e279f75ac9ff05e7c1d96","modified":1470499507246},{"_id":"public/archives/2016/07/index.html","hash":"f99234e9de7571ade0651c4e04b26096abbb1a76","modified":1470499507246},{"_id":"public/index.html","hash":"188a533456ff2aa157ec7cbd3dda684df16e1aa1","modified":1470499507246},{"_id":"public/tags/Spark-MLlib/index.html","hash":"7815d7826170b585341d587ff5f8437c9159908f","modified":1470499507245},{"_id":"public/2016/08/05/spark-mllib-regularizer/index.html","hash":"48f8a9649d078fbe6438f2593c0be6284086dd65","modified":1470499507245},{"_id":"public/CNAME","hash":"9a5b6f8f377bf245cfe23bea2445c6998c95f162","modified":1470410689836},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1470410689836},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1470410689836},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1470410689836},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1470410689836},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1470410689836},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1470410689836},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1470410689837},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1470410689837},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1470410689837},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1470410689837},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1470410689837},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1470410689837},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1470410689837},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1470410689837},{"_id":"public/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1470410689837},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1470410689837},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1470410689838},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1470410689838},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1470410689838},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1470410689838},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1470410689838},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1470410689838},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1470410689838},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1470410689838},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1470410690498},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1470410690501},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1470410690503},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1470410690509},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1470410690509},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1470410690509},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1470410690509},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1470410690509},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1470410690510},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1470410690510},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1470410690510},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1470410690510},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1470410690510},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1470410690510},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1470410690510},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1470410690510},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1470410690510},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1470410690510},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1470410690510},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1470410690510},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1470410690510},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1470410690510},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1470410690510},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1470410690510},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1470410690510},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1470410690510},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1470410690511},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1470410690511},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1470410690511},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1470410690511},{"_id":"public/css/main.css","hash":"8cb9caa61607d5a2d9678dd78563a7893e5ab558","modified":1470410690511},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1470410690511},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1470410690511},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1470410690511},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1470410690511},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1470410690511},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1470410690511},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1470410690511},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1470410690511},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1470410690511},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1470410690512},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1470410690516}],"Category":[{"name":"github","_id":"cirhwk4f700052grc8l3g37ky"},{"name":"cache_server","_id":"cirhwk4fk000f2grcwhlwhoci"},{"name":"Note","_id":"cirhwk4fn000k2grchjch40g7"},{"name":"Spark","_id":"cirhwk4fo000o2grcgyb5nbql"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"http://www.linzhe.me\"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n\n","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"http://www.linzhe.me\"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n\n","date":"2016-08-05T14:19:37.000Z","updated":"2016-08-05T14:19:37.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cirhwk4dk00002grct0fd21gl","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"http://www.linzhe.me\" homepagename=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n\n","excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"http://www.linzhe.me\"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n\n"},{"title":"about","date":"2016-07-09T09:42:48.000Z","_content":"\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-07-09 17:42:48\n---\n\n","updated":"2016-08-05T14:19:37.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cirhwk4ez00022grc10uco9qi","content":"","excerpt":"","more":""},{"title":"categories","date":"2016-07-09T09:14:23.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-07-09 17:14:23\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-08-05T14:19:37.000Z","path":"categories/index.html","layout":"page","_id":"cirhwk4j300142grc5f06zyfz","content":"","excerpt":"","more":""},{"title":"tags","date":"2016-07-09T09:12:25.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-07-09 17:12:25\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-08-05T14:19:37.000Z","path":"tags/index.html","layout":"page","_id":"cirhwk4j500152grcb26dgjpu","content":"","excerpt":"","more":""}],"Post":[{"title":"Setting up a Github Pages blog with Hexo","date":"2016-07-09T16:14:33.000Z","_content":"\n### 安装 Node.js\n------\n\n1. 从[Node.js下载地址](https://nodejs.org/en/)下载相应的包进行安装\n2. 在安装好Node.js，会默认安装好npm\n3. 使用npm安装Hexo\n   ```shell\n   npm install -g hexo\n   ```\n\n### 使用Hexo\n------\n#### 创建文件目录\n```shell\n$ hexo init username.github.io\n$ cd username.github.io\n```\n#### 修改相关的配置，使用github部署\n```shell\nvi _config.yml\n```\n在Deployment的配置中添加\n```shell\ndeploy:\n  repo: https://github.com/username/username.github.io\n  type: git\n```\n### 本地测试\n使用Hexo命令\n```shell\nhexo server\n```\n启动本地测试服务，访问[http://localhost:4000](http://localhost:4000)，可以看到默认的主题与blog文章。\n\n### 更多Hexo命令\n```shell\nhexo deploy # 部署到github\nhexo generate # 生成静态文件\nhexo clean    # 清除生成的静态文件\n```\n\n### 更多主题\n\n默认的主题可以在[hexo.io](http://www.hexo.io/theme)中获取，方法很简单，只要将主题的代码chechout到theme目录下，然后修改_config.yml文件中的theme的值，重启测试服务就可以，十分方便。\n","source":"_posts/Setting-up-a-Github-Pages-blog-with-Hexo.md","raw":"---\ntitle: Setting up a Github Pages blog with Hexo\ndate: 2016-07-10 00:14:33\ntags:\n  - Markdown\n  - github\ncategories:\n  - github\n---\n\n### 安装 Node.js\n------\n\n1. 从[Node.js下载地址](https://nodejs.org/en/)下载相应的包进行安装\n2. 在安装好Node.js，会默认安装好npm\n3. 使用npm安装Hexo\n   ```shell\n   npm install -g hexo\n   ```\n\n### 使用Hexo\n------\n#### 创建文件目录\n```shell\n$ hexo init username.github.io\n$ cd username.github.io\n```\n#### 修改相关的配置，使用github部署\n```shell\nvi _config.yml\n```\n在Deployment的配置中添加\n```shell\ndeploy:\n  repo: https://github.com/username/username.github.io\n  type: git\n```\n### 本地测试\n使用Hexo命令\n```shell\nhexo server\n```\n启动本地测试服务，访问[http://localhost:4000](http://localhost:4000)，可以看到默认的主题与blog文章。\n\n### 更多Hexo命令\n```shell\nhexo deploy # 部署到github\nhexo generate # 生成静态文件\nhexo clean    # 清除生成的静态文件\n```\n\n### 更多主题\n\n默认的主题可以在[hexo.io](http://www.hexo.io/theme)中获取，方法很简单，只要将主题的代码chechout到theme目录下，然后修改_config.yml文件中的theme的值，重启测试服务就可以，十分方便。\n","slug":"Setting-up-a-Github-Pages-blog-with-Hexo","published":1,"updated":"2016-08-05T14:19:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhwk4eu00012grc034lhf60","content":"<h3 id=\"安装-Node-js\"><a href=\"#安装-Node-js\" class=\"headerlink\" title=\"安装 Node.js\"></a>安装 Node.js</h3><hr>\n<ol>\n<li>从<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">Node.js下载地址</a>下载相应的包进行安装</li>\n<li>在安装好Node.js，会默认安装好npm</li>\n<li>使用npm安装Hexo<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hexo</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"使用Hexo\"><a href=\"#使用Hexo\" class=\"headerlink\" title=\"使用Hexo\"></a>使用Hexo</h3><hr>\n<h4 id=\"创建文件目录\"><a href=\"#创建文件目录\" class=\"headerlink\" title=\"创建文件目录\"></a>创建文件目录</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init username.github.io</div><div class=\"line\">$ cd username.github.io</div></pre></td></tr></table></figure>\n<h4 id=\"修改相关的配置，使用github部署\"><a href=\"#修改相关的配置，使用github部署\" class=\"headerlink\" title=\"修改相关的配置，使用github部署\"></a>修改相关的配置，使用github部署</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi _config.yml</div></pre></td></tr></table></figure>\n<p>在Deployment的配置中添加<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  repo: https://github.com/username/username.github.io</div><div class=\"line\">  type: git</div></pre></td></tr></table></figure></p>\n<h3 id=\"本地测试\"><a href=\"#本地测试\" class=\"headerlink\" title=\"本地测试\"></a>本地测试</h3><p>使用Hexo命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo server</div></pre></td></tr></table></figure></p>\n<p>启动本地测试服务，访问<a href=\"http://localhost:4000\" target=\"_blank\" rel=\"external\">http://localhost:4000</a>，可以看到默认的主题与blog文章。</p>\n<h3 id=\"更多Hexo命令\"><a href=\"#更多Hexo命令\" class=\"headerlink\" title=\"更多Hexo命令\"></a>更多Hexo命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo deploy # 部署到github</div><div class=\"line\">hexo generate # 生成静态文件</div><div class=\"line\">hexo clean    # 清除生成的静态文件</div></pre></td></tr></table></figure>\n<h3 id=\"更多主题\"><a href=\"#更多主题\" class=\"headerlink\" title=\"更多主题\"></a>更多主题</h3><p>默认的主题可以在<a href=\"http://www.hexo.io/theme\" target=\"_blank\" rel=\"external\">hexo.io</a>中获取，方法很简单，只要将主题的代码chechout到theme目录下，然后修改_config.yml文件中的theme的值，重启测试服务就可以，十分方便。</p>\n","excerpt":"","more":"<h3 id=\"安装-Node-js\"><a href=\"#安装-Node-js\" class=\"headerlink\" title=\"安装 Node.js\"></a>安装 Node.js</h3><hr>\n<ol>\n<li>从<a href=\"https://nodejs.org/en/\">Node.js下载地址</a>下载相应的包进行安装</li>\n<li>在安装好Node.js，会默认安装好npm</li>\n<li>使用npm安装Hexo<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hexo</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"使用Hexo\"><a href=\"#使用Hexo\" class=\"headerlink\" title=\"使用Hexo\"></a>使用Hexo</h3><hr>\n<h4 id=\"创建文件目录\"><a href=\"#创建文件目录\" class=\"headerlink\" title=\"创建文件目录\"></a>创建文件目录</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init username.github.io</div><div class=\"line\">$ cd username.github.io</div></pre></td></tr></table></figure>\n<h4 id=\"修改相关的配置，使用github部署\"><a href=\"#修改相关的配置，使用github部署\" class=\"headerlink\" title=\"修改相关的配置，使用github部署\"></a>修改相关的配置，使用github部署</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi _config.yml</div></pre></td></tr></table></figure>\n<p>在Deployment的配置中添加<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  repo: https://github.com/username/username.github.io</div><div class=\"line\">  type: git</div></pre></td></tr></table></figure></p>\n<h3 id=\"本地测试\"><a href=\"#本地测试\" class=\"headerlink\" title=\"本地测试\"></a>本地测试</h3><p>使用Hexo命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo server</div></pre></td></tr></table></figure></p>\n<p>启动本地测试服务，访问<a href=\"http://localhost:4000\">http://localhost:4000</a>，可以看到默认的主题与blog文章。</p>\n<h3 id=\"更多Hexo命令\"><a href=\"#更多Hexo命令\" class=\"headerlink\" title=\"更多Hexo命令\"></a>更多Hexo命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo deploy # 部署到github</div><div class=\"line\">hexo generate # 生成静态文件</div><div class=\"line\">hexo clean    # 清除生成的静态文件</div></pre></td></tr></table></figure>\n<h3 id=\"更多主题\"><a href=\"#更多主题\" class=\"headerlink\" title=\"更多主题\"></a>更多主题</h3><p>默认的主题可以在<a href=\"http://www.hexo.io/theme\">hexo.io</a>中获取，方法很简单，只要将主题的代码chechout到theme目录下，然后修改_config.yml文件中的theme的值，重启测试服务就可以，十分方便。</p>\n"},{"title":"微信推荐系统","date":"2016-07-10T02:31:00.000Z","_content":"\n### 爬虫\n1. 正文抽取\n2. 主题抽取\n\n### 推荐引擎\n1. tag rank\n2. 协同过滤\n3. user profile\n\n### 客户端\n  1. iOS\n  2. Android\n","source":"_posts/build-recommendtion-system.md","raw":"---\ntitle:  微信推荐系统\ndate: 2016-07-10 10:31:00\ntags:\n  - 推荐系统\ncategory:\n  - github\n---\n\n### 爬虫\n1. 正文抽取\n2. 主题抽取\n\n### 推荐引擎\n1. tag rank\n2. 协同过滤\n3. user profile\n\n### 客户端\n  1. iOS\n  2. Android\n","slug":"build-recommendtion-system","published":1,"updated":"2016-08-05T14:19:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhwk4f100032grcgfq67e8z","content":"<h3 id=\"爬虫\"><a href=\"#爬虫\" class=\"headerlink\" title=\"爬虫\"></a>爬虫</h3><ol>\n<li>正文抽取</li>\n<li>主题抽取</li>\n</ol>\n<h3 id=\"推荐引擎\"><a href=\"#推荐引擎\" class=\"headerlink\" title=\"推荐引擎\"></a>推荐引擎</h3><ol>\n<li>tag rank</li>\n<li>协同过滤</li>\n<li>user profile</li>\n</ol>\n<h3 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h3><ol>\n<li>iOS</li>\n<li>Android</li>\n</ol>\n","excerpt":"","more":"<h3 id=\"爬虫\"><a href=\"#爬虫\" class=\"headerlink\" title=\"爬虫\"></a>爬虫</h3><ol>\n<li>正文抽取</li>\n<li>主题抽取</li>\n</ol>\n<h3 id=\"推荐引擎\"><a href=\"#推荐引擎\" class=\"headerlink\" title=\"推荐引擎\"></a>推荐引擎</h3><ol>\n<li>tag rank</li>\n<li>协同过滤</li>\n<li>user profile</li>\n</ol>\n<h3 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h3><ol>\n<li>iOS</li>\n<li>Android</li>\n</ol>\n"},{"title":"cache server： 冷热数据切换","date":"2016-07-14T11:43:00.000Z","_content":"\n### 背景\nleveldb是一个Google开发的高性能的字符串类型的K-V存储C/C++类库，其详细介绍可参考[Github主页](https://github.com/google/leveldb)，刚开始工作时使用过一段时间，用于存储爬虫系统爬取的大量网页数据。但是后来就一直没有使用过。\n最近在做推荐时，发现user profile的数据实在太大，即使有类似于Redis集群1T的内存也没法将用户所有有数据cache下来，一直想着能不能做个冷热的备件系统加大对user profile数据存储数量，结合leveldb和redis。\n\n### leveldb的优势\nLevelDB内部采用连续的块存储数据，充分发挥了顺序磁盘I/O的性能，并且运用了现代操作系统里的高性能缓冲区管理。这样的结构正好迎合了现代内存的层次式结构， 避免了与产生高性能的操作系统决策之间的冲突。\n\n### redis\nRedis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。\nRedis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。\n从3.0版本开始，Redis支持数据的备份，即master-slave模式的数据备份。\n\n### 冷热数据\n因为redis强劲的性能，与leveldb互相配合，将冷热数据分开存储，互相交换数据，以达到冷热切换的目的。\n\n","source":"_posts/cache-server-start-up.md","raw":"---\ntitle:  cache server： 冷热数据切换\ndate: 2016-07-14 19:43:00\ntags:\n  - leveldb\n  - redis\n  - cache_server \ncategory:\n  - cache_server\n---\n\n### 背景\nleveldb是一个Google开发的高性能的字符串类型的K-V存储C/C++类库，其详细介绍可参考[Github主页](https://github.com/google/leveldb)，刚开始工作时使用过一段时间，用于存储爬虫系统爬取的大量网页数据。但是后来就一直没有使用过。\n最近在做推荐时，发现user profile的数据实在太大，即使有类似于Redis集群1T的内存也没法将用户所有有数据cache下来，一直想着能不能做个冷热的备件系统加大对user profile数据存储数量，结合leveldb和redis。\n\n### leveldb的优势\nLevelDB内部采用连续的块存储数据，充分发挥了顺序磁盘I/O的性能，并且运用了现代操作系统里的高性能缓冲区管理。这样的结构正好迎合了现代内存的层次式结构， 避免了与产生高性能的操作系统决策之间的冲突。\n\n### redis\nRedis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。\nRedis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。\n从3.0版本开始，Redis支持数据的备份，即master-slave模式的数据备份。\n\n### 冷热数据\n因为redis强劲的性能，与leveldb互相配合，将冷热数据分开存储，互相交换数据，以达到冷热切换的目的。\n\n","slug":"cache-server-start-up","published":1,"updated":"2016-08-05T14:19:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhwk4f800062grcucy54te0","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>leveldb是一个Google开发的高性能的字符串类型的K-V存储C/C++类库，其详细介绍可参考<a href=\"https://github.com/google/leveldb\" target=\"_blank\" rel=\"external\">Github主页</a>，刚开始工作时使用过一段时间，用于存储爬虫系统爬取的大量网页数据。但是后来就一直没有使用过。<br>最近在做推荐时，发现user profile的数据实在太大，即使有类似于Redis集群1T的内存也没法将用户所有有数据cache下来，一直想着能不能做个冷热的备件系统加大对user profile数据存储数量，结合leveldb和redis。</p>\n<h3 id=\"leveldb的优势\"><a href=\"#leveldb的优势\" class=\"headerlink\" title=\"leveldb的优势\"></a>leveldb的优势</h3><p>LevelDB内部采用连续的块存储数据，充分发挥了顺序磁盘I/O的性能，并且运用了现代操作系统里的高性能缓冲区管理。这样的结构正好迎合了现代内存的层次式结构， 避免了与产生高性能的操作系统决策之间的冲突。</p>\n<h3 id=\"redis\"><a href=\"#redis\" class=\"headerlink\" title=\"redis\"></a>redis</h3><p>Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。<br>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。<br>从3.0版本开始，Redis支持数据的备份，即master-slave模式的数据备份。</p>\n<h3 id=\"冷热数据\"><a href=\"#冷热数据\" class=\"headerlink\" title=\"冷热数据\"></a>冷热数据</h3><p>因为redis强劲的性能，与leveldb互相配合，将冷热数据分开存储，互相交换数据，以达到冷热切换的目的。</p>\n","excerpt":"","more":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>leveldb是一个Google开发的高性能的字符串类型的K-V存储C/C++类库，其详细介绍可参考<a href=\"https://github.com/google/leveldb\">Github主页</a>，刚开始工作时使用过一段时间，用于存储爬虫系统爬取的大量网页数据。但是后来就一直没有使用过。<br>最近在做推荐时，发现user profile的数据实在太大，即使有类似于Redis集群1T的内存也没法将用户所有有数据cache下来，一直想着能不能做个冷热的备件系统加大对user profile数据存储数量，结合leveldb和redis。</p>\n<h3 id=\"leveldb的优势\"><a href=\"#leveldb的优势\" class=\"headerlink\" title=\"leveldb的优势\"></a>leveldb的优势</h3><p>LevelDB内部采用连续的块存储数据，充分发挥了顺序磁盘I/O的性能，并且运用了现代操作系统里的高性能缓冲区管理。这样的结构正好迎合了现代内存的层次式结构， 避免了与产生高性能的操作系统决策之间的冲突。</p>\n<h3 id=\"redis\"><a href=\"#redis\" class=\"headerlink\" title=\"redis\"></a>redis</h3><p>Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。<br>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。<br>从3.0版本开始，Redis支持数据的备份，即master-slave模式的数据备份。</p>\n<h3 id=\"冷热数据\"><a href=\"#冷热数据\" class=\"headerlink\" title=\"冷热数据\"></a>冷热数据</h3><p>因为redis强劲的性能，与leveldb互相配合，将冷热数据分开存储，互相交换数据，以达到冷热切换的目的。</p>\n"},{"title":"Markdown Cheatsheet","date":"2016-07-09T15:48:25.000Z","_content":"# 一级标题\n\n## 二级标题\n\n### 三级标题\n\n- 列表1\n- 列表2\n\n\n\n1. 序列表1\n2. 序列表2\n\n[链接](http://baidu.com)\n\n![](http://ww4.sinaimg.cn/bmiddle/aa397b7fjw1dzplsgpdw5j.jpg)\n\n> 引用\n> 示例\n\n*斜体*\n\n**粗体**\n\n| Tables   |      Are      |  cool |\n| -------- | :-----------: | ----: |\n| col 3 is | right-aligned | $1600 |\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n\n","source":"_posts/markdown-cheatsheet.md","raw":"---\ntitle: Markdown Cheatsheet\ndate: 2016-07-09 23:48:25\ntags:\n  - Markdown\ncategories: \n  - Note\n---\n# 一级标题\n\n## 二级标题\n\n### 三级标题\n\n- 列表1\n- 列表2\n\n\n\n1. 序列表1\n2. 序列表2\n\n[链接](http://baidu.com)\n\n![](http://ww4.sinaimg.cn/bmiddle/aa397b7fjw1dzplsgpdw5j.jpg)\n\n> 引用\n> 示例\n\n*斜体*\n\n**粗体**\n\n| Tables   |      Are      |  cool |\n| -------- | :-----------: | ----: |\n| col 3 is | right-aligned | $1600 |\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n\n","slug":"markdown-cheatsheet","published":1,"updated":"2016-08-05T14:19:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhwk4f900072grc693wojp7","content":"<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><ul>\n<li>列表1</li>\n<li>列表2</li>\n</ul>\n<ol>\n<li>序列表1</li>\n<li>序列表2</li>\n</ol>\n<p><a href=\"http://baidu.com\" target=\"_blank\" rel=\"external\">链接</a></p>\n<p><img src=\"http://ww4.sinaimg.cn/bmiddle/aa397b7fjw1dzplsgpdw5j.jpg\" alt=\"\"></p>\n<blockquote>\n<p>引用<br>示例</p>\n</blockquote>\n<p><em>斜体</em></p>\n<p><strong>粗体</strong></p>\n<table>\n<thead>\n<tr>\n<th>Tables</th>\n<th style=\"text-align:center\">Are</th>\n<th style=\"text-align:right\">cool</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>col 3 is</td>\n<td style=\"text-align:center\">right-aligned</td>\n<td style=\"text-align:right\">$1600</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><ul>\n<li>列表1</li>\n<li>列表2</li>\n</ul>\n<ol>\n<li>序列表1</li>\n<li>序列表2</li>\n</ol>\n<p><a href=\"http://baidu.com\">链接</a></p>\n<p><img src=\"http://ww4.sinaimg.cn/bmiddle/aa397b7fjw1dzplsgpdw5j.jpg\" alt=\"\"></p>\n<blockquote>\n<p>引用<br>示例</p>\n</blockquote>\n<p><em>斜体</em></p>\n<p><strong>粗体</strong></p>\n<table>\n<thead>\n<tr>\n<th>Tables</th>\n<th style=\"text-align:center\">Are</th>\n<th style=\"text-align:right\">cool</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>col 3 is</td>\n<td style=\"text-align:center\">right-aligned</td>\n<td style=\"text-align:right\">$1600</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n"},{"title":"Spark MLlib 正则化","date":"2016-08-05T15:21:01.000Z","_content":"\n# 4.1 正则化\n\n正则化是为了约束训练过程，使其向生成简单模型的方向收敛，从而避免过拟合。MLlib目前支持下面的正则化方法：\n\n| 范数     |       作用          |\n|----------|---------------------|\n| L1       | 促进产生稀疏的权值  |\n| L2       |              平滑   |\n\n### MLlib正则化抽象类\n\n```scala\nabstract class Updater extends Serializable {\n  /**\n   * Compute an updated value for weights given the gradient, stepSize, iteration number and\n   * regularization parameter. Also returns the regularization value regParam * R(w)\n   * computed using the *updated* weights.\n   *\n   * @param weightsOld - Column matrix of size dx1 where d is the number of features.\n   * @param gradient - Column matrix of size dx1 where d is the number of features.\n   * @param stepSize - step size across iterations\n   * @param iter - Iteration number\n   * @param regParam - Regularization parameter\n   *\n   * @return A tuple of 2 elements. The first element is a column matrix containing updated weights,\n   *         and the second element is the regularization value computed using updated weights.\n   */\n  def compute(\n      weightsOld: Vector,\n      gradient: Vector,\n      stepSize: Double,\n      iter: Int,\n      regParam: Double): (Vector, Double)\n}\n```\n\n### L1范式\n\n```scala\n@DeveloperApi\nclass L1Updater extends Updater {\n  override def compute(\n      weightsOld: Vector,\n      gradient: Vector,\n      stepSize: Double,\n      iter: Int,\n      regParam: Double): (Vector, Double) = {\n    val thisIterStepSize = stepSize / math.sqrt(iter)\n    // Take gradient step\n    val brzWeights: BV[Double] = weightsOld.asBreeze.toDenseVector\n    brzAxpy(-thisIterStepSize, gradient.asBreeze, brzWeights)\n    // Apply proximal operator (soft thresholding)\n    val shrinkageVal = regParam * thisIterStepSize\n    var i = 0\n    val len = brzWeights.length\n    while (i < len) {\n      val wi = brzWeights(i)\n      brzWeights(i) = signum(wi) * max(0.0, abs(wi) - shrinkageVal)\n      i += 1\n    }\n\n    (Vectors.fromBreeze(brzWeights), brzNorm(brzWeights, 1.0) * regParam)\n  }\n}\n```\n\n### L2范式\n\n```scala\n@DeveloperApi\nclass SquaredL2Updater extends Updater {\n  override def compute(\n      weightsOld: Vector,\n      gradient: Vector,\n      stepSize: Double,\n      iter: Int,\n      regParam: Double): (Vector, Double) = {\n    // add up both updates from the gradient of the loss (= step) as well as\n    // the gradient of the regularizer (= regParam * weightsOld)\n    // w' = w - thisIterStepSize * (gradient + regParam * w)\n    // w' = (1 - thisIterStepSize * regParam) * w - thisIterStepSize * gradient\n    val thisIterStepSize = stepSize / math.sqrt(iter)\n    val brzWeights: BV[Double] = weightsOld.asBreeze.toDenseVector\n    brzWeights :*= (1.0 - thisIterStepSize * regParam)\n    brzAxpy(-thisIterStepSize, gradient.asBreeze, brzWeights)\n    val norm = brzNorm(brzWeights, 2.0)\n\n    (Vectors.fromBreeze(brzWeights), 0.5 * regParam * norm * norm)\n  }\n}\n```\n\n","source":"_posts/spark-mllib-regularizer.md","raw":"---\ntitle: Spark MLlib 正则化\ndate: 2016-08-05 23:21:01\ntags:\n - Spark\n - Spark MLlib\ncategories:\n - Spark\n---\n\n# 4.1 正则化\n\n正则化是为了约束训练过程，使其向生成简单模型的方向收敛，从而避免过拟合。MLlib目前支持下面的正则化方法：\n\n| 范数     |       作用          |\n|----------|---------------------|\n| L1       | 促进产生稀疏的权值  |\n| L2       |              平滑   |\n\n### MLlib正则化抽象类\n\n```scala\nabstract class Updater extends Serializable {\n  /**\n   * Compute an updated value for weights given the gradient, stepSize, iteration number and\n   * regularization parameter. Also returns the regularization value regParam * R(w)\n   * computed using the *updated* weights.\n   *\n   * @param weightsOld - Column matrix of size dx1 where d is the number of features.\n   * @param gradient - Column matrix of size dx1 where d is the number of features.\n   * @param stepSize - step size across iterations\n   * @param iter - Iteration number\n   * @param regParam - Regularization parameter\n   *\n   * @return A tuple of 2 elements. The first element is a column matrix containing updated weights,\n   *         and the second element is the regularization value computed using updated weights.\n   */\n  def compute(\n      weightsOld: Vector,\n      gradient: Vector,\n      stepSize: Double,\n      iter: Int,\n      regParam: Double): (Vector, Double)\n}\n```\n\n### L1范式\n\n```scala\n@DeveloperApi\nclass L1Updater extends Updater {\n  override def compute(\n      weightsOld: Vector,\n      gradient: Vector,\n      stepSize: Double,\n      iter: Int,\n      regParam: Double): (Vector, Double) = {\n    val thisIterStepSize = stepSize / math.sqrt(iter)\n    // Take gradient step\n    val brzWeights: BV[Double] = weightsOld.asBreeze.toDenseVector\n    brzAxpy(-thisIterStepSize, gradient.asBreeze, brzWeights)\n    // Apply proximal operator (soft thresholding)\n    val shrinkageVal = regParam * thisIterStepSize\n    var i = 0\n    val len = brzWeights.length\n    while (i < len) {\n      val wi = brzWeights(i)\n      brzWeights(i) = signum(wi) * max(0.0, abs(wi) - shrinkageVal)\n      i += 1\n    }\n\n    (Vectors.fromBreeze(brzWeights), brzNorm(brzWeights, 1.0) * regParam)\n  }\n}\n```\n\n### L2范式\n\n```scala\n@DeveloperApi\nclass SquaredL2Updater extends Updater {\n  override def compute(\n      weightsOld: Vector,\n      gradient: Vector,\n      stepSize: Double,\n      iter: Int,\n      regParam: Double): (Vector, Double) = {\n    // add up both updates from the gradient of the loss (= step) as well as\n    // the gradient of the regularizer (= regParam * weightsOld)\n    // w' = w - thisIterStepSize * (gradient + regParam * w)\n    // w' = (1 - thisIterStepSize * regParam) * w - thisIterStepSize * gradient\n    val thisIterStepSize = stepSize / math.sqrt(iter)\n    val brzWeights: BV[Double] = weightsOld.asBreeze.toDenseVector\n    brzWeights :*= (1.0 - thisIterStepSize * regParam)\n    brzAxpy(-thisIterStepSize, gradient.asBreeze, brzWeights)\n    val norm = brzNorm(brzWeights, 2.0)\n\n    (Vectors.fromBreeze(brzWeights), 0.5 * regParam * norm * norm)\n  }\n}\n```\n\n","slug":"spark-mllib-regularizer","published":1,"updated":"2016-08-06T16:09:03.000Z","_id":"cirhwk4fb00092grchf0hvqr1","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"4-1-正则化\"><a href=\"#4-1-正则化\" class=\"headerlink\" title=\"4.1 正则化\"></a>4.1 正则化</h1><p>正则化是为了约束训练过程，使其向生成简单模型的方向收敛，从而避免过拟合。MLlib目前支持下面的正则化方法：</p>\n<table>\n<thead>\n<tr>\n<th>范数</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>L1</td>\n<td>促进产生稀疏的权值</td>\n</tr>\n<tr>\n<td>L2</td>\n<td>平滑</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"MLlib正则化抽象类\"><a href=\"#MLlib正则化抽象类\" class=\"headerlink\" title=\"MLlib正则化抽象类\"></a>MLlib正则化抽象类</h3><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Updater</span> <span class=\"keyword\">extends</span> <span class=\"title\">Serializable</span> </span>&#123;</div><div class=\"line\">  <span class=\"comment\">/**</span></div><div class=\"line\">   * Compute an updated value for weights given the gradient, stepSize, iteration number and</div><div class=\"line\">   * regularization parameter. Also returns the regularization value regParam * R(w)</div><div class=\"line\">   * computed using the *updated* weights.</div><div class=\"line\">   *</div><div class=\"line\">   * @param weightsOld - Column matrix of size dx1 where d is the number of features.</div><div class=\"line\">   * @param gradient - Column matrix of size dx1 where d is the number of features.</div><div class=\"line\">   * @param stepSize - step size across iterations</div><div class=\"line\">   * @param iter - Iteration number</div><div class=\"line\">   * @param regParam - Regularization parameter</div><div class=\"line\">   *</div><div class=\"line\">   * @return A tuple of 2 elements. The first element is a column matrix containing updated weights,</div><div class=\"line\">   *         and the second element is the regularization value computed using updated weights.</div><div class=\"line\">   */</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">compute</span></span>(</div><div class=\"line\">      weightsOld: <span class=\"type\">Vector</span>,</div><div class=\"line\">      gradient: <span class=\"type\">Vector</span>,</div><div class=\"line\">      stepSize: <span class=\"type\">Double</span>,</div><div class=\"line\">      iter: <span class=\"type\">Int</span>,</div><div class=\"line\">      regParam: <span class=\"type\">Double</span>): (<span class=\"type\">Vector</span>, <span class=\"type\">Double</span>)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"L1范式\"><a href=\"#L1范式\" class=\"headerlink\" title=\"L1范式\"></a>L1范式</h3><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@DeveloperApi</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">L1Updater</span> <span class=\"keyword\">extends</span> <span class=\"title\">Updater</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">compute</span></span>(</div><div class=\"line\">      weightsOld: <span class=\"type\">Vector</span>,</div><div class=\"line\">      gradient: <span class=\"type\">Vector</span>,</div><div class=\"line\">      stepSize: <span class=\"type\">Double</span>,</div><div class=\"line\">      iter: <span class=\"type\">Int</span>,</div><div class=\"line\">      regParam: <span class=\"type\">Double</span>): (<span class=\"type\">Vector</span>, <span class=\"type\">Double</span>) = &#123;</div><div class=\"line\">    <span class=\"keyword\">val</span> thisIterStepSize = stepSize / math.sqrt(iter)</div><div class=\"line\">    <span class=\"comment\">// Take gradient step</span></div><div class=\"line\">    <span class=\"keyword\">val</span> brzWeights: <span class=\"type\">BV</span>[<span class=\"type\">Double</span>] = weightsOld.asBreeze.toDenseVector</div><div class=\"line\">    brzAxpy(-thisIterStepSize, gradient.asBreeze, brzWeights)</div><div class=\"line\">    <span class=\"comment\">// Apply proximal operator (soft thresholding)</span></div><div class=\"line\">    <span class=\"keyword\">val</span> shrinkageVal = regParam * thisIterStepSize</div><div class=\"line\">    <span class=\"keyword\">var</span> i = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">val</span> len = brzWeights.length</div><div class=\"line\">    <span class=\"keyword\">while</span> (i &lt; len) &#123;</div><div class=\"line\">      <span class=\"keyword\">val</span> wi = brzWeights(i)</div><div class=\"line\">      brzWeights(i) = signum(wi) * max(<span class=\"number\">0.0</span>, abs(wi) - shrinkageVal)</div><div class=\"line\">      i += <span class=\"number\">1</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    (<span class=\"type\">Vectors</span>.fromBreeze(brzWeights), brzNorm(brzWeights, <span class=\"number\">1.0</span>) * regParam)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"L2范式\"><a href=\"#L2范式\" class=\"headerlink\" title=\"L2范式\"></a>L2范式</h3><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@DeveloperApi</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SquaredL2Updater</span> <span class=\"keyword\">extends</span> <span class=\"title\">Updater</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">compute</span></span>(</div><div class=\"line\">      weightsOld: <span class=\"type\">Vector</span>,</div><div class=\"line\">      gradient: <span class=\"type\">Vector</span>,</div><div class=\"line\">      stepSize: <span class=\"type\">Double</span>,</div><div class=\"line\">      iter: <span class=\"type\">Int</span>,</div><div class=\"line\">      regParam: <span class=\"type\">Double</span>): (<span class=\"type\">Vector</span>, <span class=\"type\">Double</span>) = &#123;</div><div class=\"line\">    <span class=\"comment\">// add up both updates from the gradient of the loss (= step) as well as</span></div><div class=\"line\">    <span class=\"comment\">// the gradient of the regularizer (= regParam * weightsOld)</span></div><div class=\"line\">    <span class=\"comment\">// w' = w - thisIterStepSize * (gradient + regParam * w)</span></div><div class=\"line\">    <span class=\"comment\">// w' = (1 - thisIterStepSize * regParam) * w - thisIterStepSize * gradient</span></div><div class=\"line\">    <span class=\"keyword\">val</span> thisIterStepSize = stepSize / math.sqrt(iter)</div><div class=\"line\">    <span class=\"keyword\">val</span> brzWeights: <span class=\"type\">BV</span>[<span class=\"type\">Double</span>] = weightsOld.asBreeze.toDenseVector</div><div class=\"line\">    brzWeights :*= (<span class=\"number\">1.0</span> - thisIterStepSize * regParam)</div><div class=\"line\">    brzAxpy(-thisIterStepSize, gradient.asBreeze, brzWeights)</div><div class=\"line\">    <span class=\"keyword\">val</span> norm = brzNorm(brzWeights, <span class=\"number\">2.0</span>)</div><div class=\"line\"></div><div class=\"line\">    (<span class=\"type\">Vectors</span>.fromBreeze(brzWeights), <span class=\"number\">0.5</span> * regParam * norm * norm)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"4-1-正则化\"><a href=\"#4-1-正则化\" class=\"headerlink\" title=\"4.1 正则化\"></a>4.1 正则化</h1><p>正则化是为了约束训练过程，使其向生成简单模型的方向收敛，从而避免过拟合。MLlib目前支持下面的正则化方法：</p>\n<table>\n<thead>\n<tr>\n<th>范数</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>L1</td>\n<td>促进产生稀疏的权值</td>\n</tr>\n<tr>\n<td>L2</td>\n<td>平滑</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"MLlib正则化抽象类\"><a href=\"#MLlib正则化抽象类\" class=\"headerlink\" title=\"MLlib正则化抽象类\"></a>MLlib正则化抽象类</h3><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Updater</span> <span class=\"keyword\">extends</span> <span class=\"title\">Serializable</span> </span>&#123;</div><div class=\"line\">  <span class=\"comment\">/**</div><div class=\"line\">   * Compute an updated value for weights given the gradient, stepSize, iteration number and</div><div class=\"line\">   * regularization parameter. Also returns the regularization value regParam * R(w)</div><div class=\"line\">   * computed using the *updated* weights.</div><div class=\"line\">   *</div><div class=\"line\">   * @param weightsOld - Column matrix of size dx1 where d is the number of features.</div><div class=\"line\">   * @param gradient - Column matrix of size dx1 where d is the number of features.</div><div class=\"line\">   * @param stepSize - step size across iterations</div><div class=\"line\">   * @param iter - Iteration number</div><div class=\"line\">   * @param regParam - Regularization parameter</div><div class=\"line\">   *</div><div class=\"line\">   * @return A tuple of 2 elements. The first element is a column matrix containing updated weights,</div><div class=\"line\">   *         and the second element is the regularization value computed using updated weights.</div><div class=\"line\">   */</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">compute</span></span>(</div><div class=\"line\">      weightsOld: <span class=\"type\">Vector</span>,</div><div class=\"line\">      gradient: <span class=\"type\">Vector</span>,</div><div class=\"line\">      stepSize: <span class=\"type\">Double</span>,</div><div class=\"line\">      iter: <span class=\"type\">Int</span>,</div><div class=\"line\">      regParam: <span class=\"type\">Double</span>): (<span class=\"type\">Vector</span>, <span class=\"type\">Double</span>)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"L1范式\"><a href=\"#L1范式\" class=\"headerlink\" title=\"L1范式\"></a>L1范式</h3><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@DeveloperApi</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">L1Updater</span> <span class=\"keyword\">extends</span> <span class=\"title\">Updater</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">compute</span></span>(</div><div class=\"line\">      weightsOld: <span class=\"type\">Vector</span>,</div><div class=\"line\">      gradient: <span class=\"type\">Vector</span>,</div><div class=\"line\">      stepSize: <span class=\"type\">Double</span>,</div><div class=\"line\">      iter: <span class=\"type\">Int</span>,</div><div class=\"line\">      regParam: <span class=\"type\">Double</span>): (<span class=\"type\">Vector</span>, <span class=\"type\">Double</span>) = &#123;</div><div class=\"line\">    <span class=\"keyword\">val</span> thisIterStepSize = stepSize / math.sqrt(iter)</div><div class=\"line\">    <span class=\"comment\">// Take gradient step</span></div><div class=\"line\">    <span class=\"keyword\">val</span> brzWeights: <span class=\"type\">BV</span>[<span class=\"type\">Double</span>] = weightsOld.asBreeze.toDenseVector</div><div class=\"line\">    brzAxpy(-thisIterStepSize, gradient.asBreeze, brzWeights)</div><div class=\"line\">    <span class=\"comment\">// Apply proximal operator (soft thresholding)</span></div><div class=\"line\">    <span class=\"keyword\">val</span> shrinkageVal = regParam * thisIterStepSize</div><div class=\"line\">    <span class=\"keyword\">var</span> i = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">val</span> len = brzWeights.length</div><div class=\"line\">    <span class=\"keyword\">while</span> (i &lt; len) &#123;</div><div class=\"line\">      <span class=\"keyword\">val</span> wi = brzWeights(i)</div><div class=\"line\">      brzWeights(i) = signum(wi) * max(<span class=\"number\">0.0</span>, abs(wi) - shrinkageVal)</div><div class=\"line\">      i += <span class=\"number\">1</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    (<span class=\"type\">Vectors</span>.fromBreeze(brzWeights), brzNorm(brzWeights, <span class=\"number\">1.0</span>) * regParam)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"L2范式\"><a href=\"#L2范式\" class=\"headerlink\" title=\"L2范式\"></a>L2范式</h3><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@DeveloperApi</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SquaredL2Updater</span> <span class=\"keyword\">extends</span> <span class=\"title\">Updater</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">compute</span></span>(</div><div class=\"line\">      weightsOld: <span class=\"type\">Vector</span>,</div><div class=\"line\">      gradient: <span class=\"type\">Vector</span>,</div><div class=\"line\">      stepSize: <span class=\"type\">Double</span>,</div><div class=\"line\">      iter: <span class=\"type\">Int</span>,</div><div class=\"line\">      regParam: <span class=\"type\">Double</span>): (<span class=\"type\">Vector</span>, <span class=\"type\">Double</span>) = &#123;</div><div class=\"line\">    <span class=\"comment\">// add up both updates from the gradient of the loss (= step) as well as</span></div><div class=\"line\">    <span class=\"comment\">// the gradient of the regularizer (= regParam * weightsOld)</span></div><div class=\"line\">    <span class=\"comment\">// w' = w - thisIterStepSize * (gradient + regParam * w)</span></div><div class=\"line\">    <span class=\"comment\">// w' = (1 - thisIterStepSize * regParam) * w - thisIterStepSize * gradient</span></div><div class=\"line\">    <span class=\"keyword\">val</span> thisIterStepSize = stepSize / math.sqrt(iter)</div><div class=\"line\">    <span class=\"keyword\">val</span> brzWeights: <span class=\"type\">BV</span>[<span class=\"type\">Double</span>] = weightsOld.asBreeze.toDenseVector</div><div class=\"line\">    brzWeights :*= (<span class=\"number\">1.0</span> - thisIterStepSize * regParam)</div><div class=\"line\">    brzAxpy(-thisIterStepSize, gradient.asBreeze, brzWeights)</div><div class=\"line\">    <span class=\"keyword\">val</span> norm = brzNorm(brzWeights, <span class=\"number\">2.0</span>)</div><div class=\"line\"></div><div class=\"line\">    (<span class=\"type\">Vectors</span>.fromBreeze(brzWeights), <span class=\"number\">0.5</span> * regParam * norm * norm)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"spark RDD 操作","date":"2016-08-04T12:06:29.000Z","_content":"\n# 2.1 Spark RDD操作\n\n## 2.1.1 RDD是什么？\n\n弹性分布式数据集RDD是Spark中的抽象数据结构类型，任何数据在Spark中都被表示为RDD。\n\n```scala\nabstract class RDD[T: ClassTag](\n    @transient private var _sc: SparkContext,\n    @transient private var deps: Seq[Dependency[_]]\n  ) extends Serializable with Logging \n```\nRDD还提供了一组丰富的操作来操作这些数据。在这些操作中，诸如map、flatMap、filter等转换操作实现了monad模式，很好地契合了Scala的集合操作。除此之外，RDD还提供了诸如join、groupBy、reduceByKey等更为方便的操作（注意，reduceByKey是action，而非transformation），以支持常见的数据运算。RDD可以简单看成是一个数组。和普通数组的区别是，RDD中的数据是分区存储的，这样不同分区的数据就可以分布在不同的机器上，同时可以被并行处理。因此，Spark应用程序所做的就是把需要处理的数据转换为RDD，然后对RDD进行一系列的变换和操作从而得到结果。RDD的接口只支持粗粒度的操作，一个操作会被应用到RDD上所有的数据上。\n\n## 2.1.2 RDD基本转换操作\n\n- map操作将RDD中类型为T的元素一对一的映射为类型为U的元素\n\n```scala\ndef map[U: ClassTag](f: T => U): RDD[U] = withScope {\n  val cleanF = sc.clean(f)\n  new MapPartitionsRDD[U, T](this, (context, pid, iter) => iter.map(cleanF))\n}\n```\n举例\n\n```shell\nscala> var rdd = sc.makeRDD(1 to 5, 1)\nrdd: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[1] at makeRDD at <console>:21\nscala> rdd.collect()\nres2: Array[Int] = Array(1, 2, 3, 4, 5)\nscala> val mapRDD = rdd.map(x => x.toFloat)\nmapRDD: org.apache.spark.rdd.RDD[Float] = MapPartitionsRDD[2] at map at <console>:23\nscala> mapRDD.collect()\nres3: Array[Float] = Array(1.0, 2.0, 3.0, 4.0, 5.0)\n```\n\n- distinct操作返回RDD中所有不一样的元素\n\n```scala\ndef distinct(numPartitions: Int)(implicit ord: Ordering[T] = null): RDD[T] = withScope {\n  map(x => (x, null)).reduceByKey((x, y) => x, numPartitions).map(_._1)\n}\n```\n\n- flatMap操作将RDD中每一个元素进行一对多转换\n\n```scala\ndef flatMap[U: ClassTag](f: T => TraversableOnce[U]): RDD[U] = withScope {\n  val cleanF = sc.clean(f)\n  new MapPartitionsRDD[U, T](this, (context, pid, iter) => iter.flatMap(cleanF))\n}\n```\n  举例\n```shell\nscala> val flatMapRDD = rdd.flatMap(x => 1 to x)\nflatMapRDD: org.apache.spark.rdd.RDD[Int] = MapPartitionsRDD[3] at flatMap at <console>:23\nscala> flatMapRDD.collect()\nres4: Array[Int] = Array(1, 1, 2, 1, 2, 3, 1, 2, 3, 4, 1, 2, 3, 4, 5)\n```\n\n- filter操作对RDD中的元素进行过滤\n\n```scala\ndef filter(f: T => Boolean): RDD[T] = withScope {\n  val cleanF = sc.clean(f)\n  new MapPartitionsRDD[T, T](\n    this,\n    (context, pid, iter) => iter.filter(cleanF),\n    preservesPartitioning = true)\n}\n```\n\n## 2.1.3 键值RDD转换操作\n\n- combineByKey、foldByKey、reduceByKey、groupByKey这四种操作类型，都是针对RDD[K, V]进行，最终会归结为combineByKey的操作上。\n  combineByKey的内部实现分成三部分来完成：\n\n1. 首先，根据是否需要在map端进行combine操作决定是否对RDD进行一次mapPartitions操作，从而减少shuffle的数据量。\n\n2. 第2步根据partitioner函数对MapPartitionsRDD进行shuffle操作。\n\n3. 最后对suffle的结果进行combine操作。\n\n\n- join、leftOuterJoin、rightOuterJoin针对RDD[K, V]中K值相等的连接操作，最终归结为cogroup来实现。\n\n```scala\ndef cogroup[W](other: RDD[(K, W)], partitioner: Partitioner)\n    : RDD[(K, (Iterable[V], Iterable[W]))] = self.withScope {\n  if (partitioner.isInstanceOf[HashPartitioner] && keyClass.isArray) {\n    throw new SparkException(\"Default partitioner cannot partition array keys.\")\n  }\n  val cg = new CoGroupedRDD[K](Seq(self, other), partitioner)\n  cg.mapValues { case Array(vs, w1s) =>\n    (vs.asInstanceOf[Iterable[V]], w1s.asInstanceOf[Iterable[W]])\n  }\n}\n```\n\n一个join操作会产生CoGroupRDD、MapValuesRDD、FlatMapValuesRDD三个RDD。\n\n```scala\ndef join[W](other: RDD[(K, W)], partitioner: Partitioner): RDD[(K, (V, W))] = self.withScope {\n  this.cogroup(other, partitioner).flatMapValues( pair =>\n    for (v <- pair._1.iterator; w <- pair._2.iterator) yield (v, w)\n  )\n}\n```\n\n## 2.1.4 RDD依赖关系\n\n因为RDD操作是粗粒度的，每一个转换操作都会产生一个新有RDD，所以前后的RDD就会形成前后依赖关系。Spark中有两种依赖类型，窄依赖（Narrow Dependenceis）和宽依赖（Wide Dependencies）。\n\n- 窄依赖，每一个父RDD的分区最多只被子RDD的一个分区所依赖，map、filter、union操作就会形成一个窄依赖\n\n- 宽依赖，多个子RDD的分区会依赖于同一个父RDD的分区。两个RDD数据集之间进行join操作就会形成宽依赖。\n\n\n## 2.1.5 使用Spark实现PageRank算法\n\nPageRank，网页排名，又称网页级别、Google左侧排名或佩奇排名，是一种由搜索引擎根据网页之间相互的超链接计算的技术，而作为网页排名的要素之一，以Google公司创办人拉里·佩奇（Larry Page）之姓来命名。Google用它来体现网页的相关性和重要性，在搜索引擎优化操作中是经常被用来评估网页优化的成效因素之一。\n\nPageRank通过网络浩瀚的超链接关系来确定一个页面的等级。Google把从A页面到B页面的链接解释为A页面给B页面投票，Google根据投票来源（甚至来源的来源，即链接到A页面的页面）和投票目标的等级来决定新的等级。简单的说，一个高等级的页面可以使其他低等级页面的等级提升。[来源[维基百科](https://zh.wikipedia.org/wiki/PageRank)]\n\n其算法原理如下：\n\n1. 通过链接关系将网页构建成Web图，每个页面设置相同的PageRank值，初始一般为1。\n2. 将每一个网页的权重贡献发送给相邻的网页，权重贡献=权重/指向的URL个数\n3. 对天每一个网页，将收到的权重贡献相加记为contribs，重新计算权重rank=0.15 + contribs*0.85\n4. 迭代1、2、3，直到收敛。\n\n利用Spark的各种操作方法，可以方便的实现PageRank算法，实现如下：\n\n```scala\nval MAX_ITERATION = 20\nval links = sc.parallelize(Array(('A', Array('D')), ('B', Array('A')), ('C', Array('A', 'B')), ('D', Array('A', 'C'))), 2).map(x => (x._1,x._2)).cache()\nvar ranks = sc.parallelize(Array(('A', 1.0), ('B', 1.0), ('C', 1.0), ('D', 1.0)), 2)\nfor (i <- 1 to MAX_ITERATION) {\n  val contribs = links.join(ranks, 2).flatMap {\n    case (url, (links, rank)) => links.map(dest => (dest, rank/links.size))\n  }\n  ranks = contribs.reduceByKey(_ + _, 2).mapValues(0.15 + 0.85 * _)\n}\nranks.collect()\n```\n\n最终结果：\n\n```shell\nres15: Array[(Char, Double)] = Array((B,0.4613200524321036), (D,1.3705281840649928), (A,1.4357617405523626), (C,0.7323900229505396))\n```\n\n","source":"_posts/spark-rdd.md","raw":"---\ntitle: spark RDD 操作\ndate: 2016-08-04 20:06:29\ntags:\n  - Spark\ncategories:\n  - Spark\n---\n\n# 2.1 Spark RDD操作\n\n## 2.1.1 RDD是什么？\n\n弹性分布式数据集RDD是Spark中的抽象数据结构类型，任何数据在Spark中都被表示为RDD。\n\n```scala\nabstract class RDD[T: ClassTag](\n    @transient private var _sc: SparkContext,\n    @transient private var deps: Seq[Dependency[_]]\n  ) extends Serializable with Logging \n```\nRDD还提供了一组丰富的操作来操作这些数据。在这些操作中，诸如map、flatMap、filter等转换操作实现了monad模式，很好地契合了Scala的集合操作。除此之外，RDD还提供了诸如join、groupBy、reduceByKey等更为方便的操作（注意，reduceByKey是action，而非transformation），以支持常见的数据运算。RDD可以简单看成是一个数组。和普通数组的区别是，RDD中的数据是分区存储的，这样不同分区的数据就可以分布在不同的机器上，同时可以被并行处理。因此，Spark应用程序所做的就是把需要处理的数据转换为RDD，然后对RDD进行一系列的变换和操作从而得到结果。RDD的接口只支持粗粒度的操作，一个操作会被应用到RDD上所有的数据上。\n\n## 2.1.2 RDD基本转换操作\n\n- map操作将RDD中类型为T的元素一对一的映射为类型为U的元素\n\n```scala\ndef map[U: ClassTag](f: T => U): RDD[U] = withScope {\n  val cleanF = sc.clean(f)\n  new MapPartitionsRDD[U, T](this, (context, pid, iter) => iter.map(cleanF))\n}\n```\n举例\n\n```shell\nscala> var rdd = sc.makeRDD(1 to 5, 1)\nrdd: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[1] at makeRDD at <console>:21\nscala> rdd.collect()\nres2: Array[Int] = Array(1, 2, 3, 4, 5)\nscala> val mapRDD = rdd.map(x => x.toFloat)\nmapRDD: org.apache.spark.rdd.RDD[Float] = MapPartitionsRDD[2] at map at <console>:23\nscala> mapRDD.collect()\nres3: Array[Float] = Array(1.0, 2.0, 3.0, 4.0, 5.0)\n```\n\n- distinct操作返回RDD中所有不一样的元素\n\n```scala\ndef distinct(numPartitions: Int)(implicit ord: Ordering[T] = null): RDD[T] = withScope {\n  map(x => (x, null)).reduceByKey((x, y) => x, numPartitions).map(_._1)\n}\n```\n\n- flatMap操作将RDD中每一个元素进行一对多转换\n\n```scala\ndef flatMap[U: ClassTag](f: T => TraversableOnce[U]): RDD[U] = withScope {\n  val cleanF = sc.clean(f)\n  new MapPartitionsRDD[U, T](this, (context, pid, iter) => iter.flatMap(cleanF))\n}\n```\n  举例\n```shell\nscala> val flatMapRDD = rdd.flatMap(x => 1 to x)\nflatMapRDD: org.apache.spark.rdd.RDD[Int] = MapPartitionsRDD[3] at flatMap at <console>:23\nscala> flatMapRDD.collect()\nres4: Array[Int] = Array(1, 1, 2, 1, 2, 3, 1, 2, 3, 4, 1, 2, 3, 4, 5)\n```\n\n- filter操作对RDD中的元素进行过滤\n\n```scala\ndef filter(f: T => Boolean): RDD[T] = withScope {\n  val cleanF = sc.clean(f)\n  new MapPartitionsRDD[T, T](\n    this,\n    (context, pid, iter) => iter.filter(cleanF),\n    preservesPartitioning = true)\n}\n```\n\n## 2.1.3 键值RDD转换操作\n\n- combineByKey、foldByKey、reduceByKey、groupByKey这四种操作类型，都是针对RDD[K, V]进行，最终会归结为combineByKey的操作上。\n  combineByKey的内部实现分成三部分来完成：\n\n1. 首先，根据是否需要在map端进行combine操作决定是否对RDD进行一次mapPartitions操作，从而减少shuffle的数据量。\n\n2. 第2步根据partitioner函数对MapPartitionsRDD进行shuffle操作。\n\n3. 最后对suffle的结果进行combine操作。\n\n\n- join、leftOuterJoin、rightOuterJoin针对RDD[K, V]中K值相等的连接操作，最终归结为cogroup来实现。\n\n```scala\ndef cogroup[W](other: RDD[(K, W)], partitioner: Partitioner)\n    : RDD[(K, (Iterable[V], Iterable[W]))] = self.withScope {\n  if (partitioner.isInstanceOf[HashPartitioner] && keyClass.isArray) {\n    throw new SparkException(\"Default partitioner cannot partition array keys.\")\n  }\n  val cg = new CoGroupedRDD[K](Seq(self, other), partitioner)\n  cg.mapValues { case Array(vs, w1s) =>\n    (vs.asInstanceOf[Iterable[V]], w1s.asInstanceOf[Iterable[W]])\n  }\n}\n```\n\n一个join操作会产生CoGroupRDD、MapValuesRDD、FlatMapValuesRDD三个RDD。\n\n```scala\ndef join[W](other: RDD[(K, W)], partitioner: Partitioner): RDD[(K, (V, W))] = self.withScope {\n  this.cogroup(other, partitioner).flatMapValues( pair =>\n    for (v <- pair._1.iterator; w <- pair._2.iterator) yield (v, w)\n  )\n}\n```\n\n## 2.1.4 RDD依赖关系\n\n因为RDD操作是粗粒度的，每一个转换操作都会产生一个新有RDD，所以前后的RDD就会形成前后依赖关系。Spark中有两种依赖类型，窄依赖（Narrow Dependenceis）和宽依赖（Wide Dependencies）。\n\n- 窄依赖，每一个父RDD的分区最多只被子RDD的一个分区所依赖，map、filter、union操作就会形成一个窄依赖\n\n- 宽依赖，多个子RDD的分区会依赖于同一个父RDD的分区。两个RDD数据集之间进行join操作就会形成宽依赖。\n\n\n## 2.1.5 使用Spark实现PageRank算法\n\nPageRank，网页排名，又称网页级别、Google左侧排名或佩奇排名，是一种由搜索引擎根据网页之间相互的超链接计算的技术，而作为网页排名的要素之一，以Google公司创办人拉里·佩奇（Larry Page）之姓来命名。Google用它来体现网页的相关性和重要性，在搜索引擎优化操作中是经常被用来评估网页优化的成效因素之一。\n\nPageRank通过网络浩瀚的超链接关系来确定一个页面的等级。Google把从A页面到B页面的链接解释为A页面给B页面投票，Google根据投票来源（甚至来源的来源，即链接到A页面的页面）和投票目标的等级来决定新的等级。简单的说，一个高等级的页面可以使其他低等级页面的等级提升。[来源[维基百科](https://zh.wikipedia.org/wiki/PageRank)]\n\n其算法原理如下：\n\n1. 通过链接关系将网页构建成Web图，每个页面设置相同的PageRank值，初始一般为1。\n2. 将每一个网页的权重贡献发送给相邻的网页，权重贡献=权重/指向的URL个数\n3. 对天每一个网页，将收到的权重贡献相加记为contribs，重新计算权重rank=0.15 + contribs*0.85\n4. 迭代1、2、3，直到收敛。\n\n利用Spark的各种操作方法，可以方便的实现PageRank算法，实现如下：\n\n```scala\nval MAX_ITERATION = 20\nval links = sc.parallelize(Array(('A', Array('D')), ('B', Array('A')), ('C', Array('A', 'B')), ('D', Array('A', 'C'))), 2).map(x => (x._1,x._2)).cache()\nvar ranks = sc.parallelize(Array(('A', 1.0), ('B', 1.0), ('C', 1.0), ('D', 1.0)), 2)\nfor (i <- 1 to MAX_ITERATION) {\n  val contribs = links.join(ranks, 2).flatMap {\n    case (url, (links, rank)) => links.map(dest => (dest, rank/links.size))\n  }\n  ranks = contribs.reduceByKey(_ + _, 2).mapValues(0.15 + 0.85 * _)\n}\nranks.collect()\n```\n\n最终结果：\n\n```shell\nres15: Array[(Char, Double)] = Array((B,0.4613200524321036), (D,1.3705281840649928), (A,1.4357617405523626), (C,0.7323900229505396))\n```\n\n","slug":"spark-rdd","published":1,"updated":"2016-08-05T15:09:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhwk4fg000c2grc0qtt8ujl","content":"<h1 id=\"2-1-Spark-RDD操作\"><a href=\"#2-1-Spark-RDD操作\" class=\"headerlink\" title=\"2.1 Spark RDD操作\"></a>2.1 Spark RDD操作</h1><h2 id=\"2-1-1-RDD是什么？\"><a href=\"#2-1-1-RDD是什么？\" class=\"headerlink\" title=\"2.1.1 RDD是什么？\"></a>2.1.1 RDD是什么？</h2><p>弹性分布式数据集RDD是Spark中的抽象数据结构类型，任何数据在Spark中都被表示为RDD。</p>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RDD</span>[<span class=\"type\">T</span>: <span class=\"type\">ClassTag</span>](<span class=\"params\"></span></span></div><div class=\"line\">    @transient private var _sc: <span class=\"type\">SparkContext</span>,</div><div class=\"line\">    @transient private var deps: <span class=\"type\">Seq</span>[<span class=\"type\">Dependency</span>[_]]</div><div class=\"line\">  ) <span class=\"keyword\">extends</span> <span class=\"title\">Serializable</span> <span class=\"keyword\">with</span> <span class=\"title\">Logging</span></div></pre></td></tr></table></figure>\n<p>RDD还提供了一组丰富的操作来操作这些数据。在这些操作中，诸如map、flatMap、filter等转换操作实现了monad模式，很好地契合了Scala的集合操作。除此之外，RDD还提供了诸如join、groupBy、reduceByKey等更为方便的操作（注意，reduceByKey是action，而非transformation），以支持常见的数据运算。RDD可以简单看成是一个数组。和普通数组的区别是，RDD中的数据是分区存储的，这样不同分区的数据就可以分布在不同的机器上，同时可以被并行处理。因此，Spark应用程序所做的就是把需要处理的数据转换为RDD，然后对RDD进行一系列的变换和操作从而得到结果。RDD的接口只支持粗粒度的操作，一个操作会被应用到RDD上所有的数据上。</p>\n<h2 id=\"2-1-2-RDD基本转换操作\"><a href=\"#2-1-2-RDD基本转换操作\" class=\"headerlink\" title=\"2.1.2 RDD基本转换操作\"></a>2.1.2 RDD基本转换操作</h2><ul>\n<li>map操作将RDD中类型为T的元素一对一的映射为类型为U的元素</li>\n</ul>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">map</span></span>[<span class=\"type\">U</span>: <span class=\"type\">ClassTag</span>](f: <span class=\"type\">T</span> =&gt; <span class=\"type\">U</span>): <span class=\"type\">RDD</span>[<span class=\"type\">U</span>] = withScope &#123;</div><div class=\"line\">  <span class=\"keyword\">val</span> cleanF = sc.clean(f)</div><div class=\"line\">  <span class=\"keyword\">new</span> <span class=\"type\">MapPartitionsRDD</span>[<span class=\"type\">U</span>, <span class=\"type\">T</span>](<span class=\"keyword\">this</span>, (context, pid, iter) =&gt; iter.map(cleanF))</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>举例</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">scala&gt; var rdd = sc.makeRDD(1 to 5, 1)</div><div class=\"line\">rdd: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[1] at makeRDD at &lt;console&gt;:21</div><div class=\"line\">scala&gt; rdd.collect()</div><div class=\"line\">res2: Array[Int] = Array(1, 2, 3, 4, 5)</div><div class=\"line\">scala&gt; val mapRDD = rdd.map(x =&gt; x.toFloat)</div><div class=\"line\">mapRDD: org.apache.spark.rdd.RDD[Float] = MapPartitionsRDD[2] at map at &lt;console&gt;:23</div><div class=\"line\">scala&gt; mapRDD.collect()</div><div class=\"line\">res3: Array[Float] = Array(1.0, 2.0, 3.0, 4.0, 5.0)</div></pre></td></tr></table></figure>\n<ul>\n<li>distinct操作返回RDD中所有不一样的元素</li>\n</ul>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">distinct</span></span>(numPartitions: <span class=\"type\">Int</span>)(<span class=\"keyword\">implicit</span> ord: <span class=\"type\">Ordering</span>[<span class=\"type\">T</span>] = <span class=\"literal\">null</span>): <span class=\"type\">RDD</span>[<span class=\"type\">T</span>] = withScope &#123;</div><div class=\"line\">  map(x =&gt; (x, <span class=\"literal\">null</span>)).reduceByKey((x, y) =&gt; x, numPartitions).map(_._1)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>flatMap操作将RDD中每一个元素进行一对多转换</li>\n</ul>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">flatMap</span></span>[<span class=\"type\">U</span>: <span class=\"type\">ClassTag</span>](f: <span class=\"type\">T</span> =&gt; <span class=\"type\">TraversableOnce</span>[<span class=\"type\">U</span>]): <span class=\"type\">RDD</span>[<span class=\"type\">U</span>] = withScope &#123;</div><div class=\"line\">  <span class=\"keyword\">val</span> cleanF = sc.clean(f)</div><div class=\"line\">  <span class=\"keyword\">new</span> <span class=\"type\">MapPartitionsRDD</span>[<span class=\"type\">U</span>, <span class=\"type\">T</span>](<span class=\"keyword\">this</span>, (context, pid, iter) =&gt; iter.flatMap(cleanF))</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>  举例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">scala&gt; val flatMapRDD = rdd.flatMap(x =&gt; 1 to x)</div><div class=\"line\">flatMapRDD: org.apache.spark.rdd.RDD[Int] = MapPartitionsRDD[3] at flatMap at &lt;console&gt;:23</div><div class=\"line\">scala&gt; flatMapRDD.collect()</div><div class=\"line\">res4: Array[Int] = Array(1, 1, 2, 1, 2, 3, 1, 2, 3, 4, 1, 2, 3, 4, 5)</div></pre></td></tr></table></figure></p>\n<ul>\n<li>filter操作对RDD中的元素进行过滤</li>\n</ul>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">filter</span></span>(f: <span class=\"type\">T</span> =&gt; <span class=\"type\">Boolean</span>): <span class=\"type\">RDD</span>[<span class=\"type\">T</span>] = withScope &#123;</div><div class=\"line\">  <span class=\"keyword\">val</span> cleanF = sc.clean(f)</div><div class=\"line\">  <span class=\"keyword\">new</span> <span class=\"type\">MapPartitionsRDD</span>[<span class=\"type\">T</span>, <span class=\"type\">T</span>](</div><div class=\"line\">    <span class=\"keyword\">this</span>,</div><div class=\"line\">    (context, pid, iter) =&gt; iter.filter(cleanF),</div><div class=\"line\">    preservesPartitioning = <span class=\"literal\">true</span>)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"2-1-3-键值RDD转换操作\"><a href=\"#2-1-3-键值RDD转换操作\" class=\"headerlink\" title=\"2.1.3 键值RDD转换操作\"></a>2.1.3 键值RDD转换操作</h2><ul>\n<li>combineByKey、foldByKey、reduceByKey、groupByKey这四种操作类型，都是针对RDD[K, V]进行，最终会归结为combineByKey的操作上。<br>combineByKey的内部实现分成三部分来完成：</li>\n</ul>\n<ol>\n<li><p>首先，根据是否需要在map端进行combine操作决定是否对RDD进行一次mapPartitions操作，从而减少shuffle的数据量。</p>\n</li>\n<li><p>第2步根据partitioner函数对MapPartitionsRDD进行shuffle操作。</p>\n</li>\n<li><p>最后对suffle的结果进行combine操作。</p>\n</li>\n</ol>\n<ul>\n<li>join、leftOuterJoin、rightOuterJoin针对RDD[K, V]中K值相等的连接操作，最终归结为cogroup来实现。</li>\n</ul>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cogroup</span></span>[<span class=\"type\">W</span>](other: <span class=\"type\">RDD</span>[(<span class=\"type\">K</span>, <span class=\"type\">W</span>)], partitioner: <span class=\"type\">Partitioner</span>)</div><div class=\"line\">    : <span class=\"type\">RDD</span>[(<span class=\"type\">K</span>, (<span class=\"type\">Iterable</span>[<span class=\"type\">V</span>], <span class=\"type\">Iterable</span>[<span class=\"type\">W</span>]))] = self.withScope &#123;</div><div class=\"line\">  <span class=\"keyword\">if</span> (partitioner.isInstanceOf[<span class=\"type\">HashPartitioner</span>] &amp;&amp; keyClass.isArray) &#123;</div><div class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"type\">SparkException</span>(<span class=\"string\">\"Default partitioner cannot partition array keys.\"</span>)</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">val</span> cg = <span class=\"keyword\">new</span> <span class=\"type\">CoGroupedRDD</span>[<span class=\"type\">K</span>](<span class=\"type\">Seq</span>(self, other), partitioner)</div><div class=\"line\">  cg.mapValues &#123; <span class=\"keyword\">case</span> <span class=\"type\">Array</span>(vs, w1s) =&gt;</div><div class=\"line\">    (vs.asInstanceOf[<span class=\"type\">Iterable</span>[<span class=\"type\">V</span>]], w1s.asInstanceOf[<span class=\"type\">Iterable</span>[<span class=\"type\">W</span>]])</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>一个join操作会产生CoGroupRDD、MapValuesRDD、FlatMapValuesRDD三个RDD。</p>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">join</span></span>[<span class=\"type\">W</span>](other: <span class=\"type\">RDD</span>[(<span class=\"type\">K</span>, <span class=\"type\">W</span>)], partitioner: <span class=\"type\">Partitioner</span>): <span class=\"type\">RDD</span>[(<span class=\"type\">K</span>, (<span class=\"type\">V</span>, <span class=\"type\">W</span>))] = self.withScope &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.cogroup(other, partitioner).flatMapValues( pair =&gt;</div><div class=\"line\">    <span class=\"keyword\">for</span> (v &lt;- pair._1.iterator; w &lt;- pair._2.iterator) <span class=\"keyword\">yield</span> (v, w)</div><div class=\"line\">  )</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"2-1-4-RDD依赖关系\"><a href=\"#2-1-4-RDD依赖关系\" class=\"headerlink\" title=\"2.1.4 RDD依赖关系\"></a>2.1.4 RDD依赖关系</h2><p>因为RDD操作是粗粒度的，每一个转换操作都会产生一个新有RDD，所以前后的RDD就会形成前后依赖关系。Spark中有两种依赖类型，窄依赖（Narrow Dependenceis）和宽依赖（Wide Dependencies）。</p>\n<ul>\n<li><p>窄依赖，每一个父RDD的分区最多只被子RDD的一个分区所依赖，map、filter、union操作就会形成一个窄依赖</p>\n</li>\n<li><p>宽依赖，多个子RDD的分区会依赖于同一个父RDD的分区。两个RDD数据集之间进行join操作就会形成宽依赖。</p>\n</li>\n</ul>\n<h2 id=\"2-1-5-使用Spark实现PageRank算法\"><a href=\"#2-1-5-使用Spark实现PageRank算法\" class=\"headerlink\" title=\"2.1.5 使用Spark实现PageRank算法\"></a>2.1.5 使用Spark实现PageRank算法</h2><p>PageRank，网页排名，又称网页级别、Google左侧排名或佩奇排名，是一种由搜索引擎根据网页之间相互的超链接计算的技术，而作为网页排名的要素之一，以Google公司创办人拉里·佩奇（Larry Page）之姓来命名。Google用它来体现网页的相关性和重要性，在搜索引擎优化操作中是经常被用来评估网页优化的成效因素之一。</p>\n<p>PageRank通过网络浩瀚的超链接关系来确定一个页面的等级。Google把从A页面到B页面的链接解释为A页面给B页面投票，Google根据投票来源（甚至来源的来源，即链接到A页面的页面）和投票目标的等级来决定新的等级。简单的说，一个高等级的页面可以使其他低等级页面的等级提升。[来源<a href=\"https://zh.wikipedia.org/wiki/PageRank\" target=\"_blank\" rel=\"external\">维基百科</a>]</p>\n<p>其算法原理如下：</p>\n<ol>\n<li>通过链接关系将网页构建成Web图，每个页面设置相同的PageRank值，初始一般为1。</li>\n<li>将每一个网页的权重贡献发送给相邻的网页，权重贡献=权重/指向的URL个数</li>\n<li>对天每一个网页，将收到的权重贡献相加记为contribs，重新计算权重rank=0.15 + contribs*0.85</li>\n<li>迭代1、2、3，直到收敛。</li>\n</ol>\n<p>利用Spark的各种操作方法，可以方便的实现PageRank算法，实现如下：</p>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">val</span> <span class=\"type\">MAX_ITERATION</span> = <span class=\"number\">20</span></div><div class=\"line\"><span class=\"keyword\">val</span> links = sc.parallelize(<span class=\"type\">Array</span>(('<span class=\"type\">A</span>', <span class=\"type\">Array</span>('<span class=\"type\">D</span>')), ('<span class=\"type\">B</span>', <span class=\"type\">Array</span>('<span class=\"type\">A</span>')), ('<span class=\"type\">C</span>', <span class=\"type\">Array</span>('<span class=\"type\">A</span>', '<span class=\"type\">B</span>')), ('<span class=\"type\">D</span>', <span class=\"type\">Array</span>('<span class=\"type\">A</span>', '<span class=\"type\">C</span>'))), <span class=\"number\">2</span>).map(x =&gt; (x._1,x._2)).cache()</div><div class=\"line\"><span class=\"keyword\">var</span> ranks = sc.parallelize(<span class=\"type\">Array</span>(('<span class=\"type\">A</span>', <span class=\"number\">1.0</span>), ('<span class=\"type\">B</span>', <span class=\"number\">1.0</span>), ('<span class=\"type\">C</span>', <span class=\"number\">1.0</span>), ('<span class=\"type\">D</span>', <span class=\"number\">1.0</span>)), <span class=\"number\">2</span>)</div><div class=\"line\"><span class=\"keyword\">for</span> (i &lt;- <span class=\"number\">1</span> to <span class=\"type\">MAX_ITERATION</span>) &#123;</div><div class=\"line\">  <span class=\"keyword\">val</span> contribs = links.join(ranks, <span class=\"number\">2</span>).flatMap &#123;</div><div class=\"line\">    <span class=\"keyword\">case</span> (url, (links, rank)) =&gt; links.map(dest =&gt; (dest, rank/links.size))</div><div class=\"line\">  &#125;</div><div class=\"line\">  ranks = contribs.reduceByKey(_ + _, <span class=\"number\">2</span>).mapValues(<span class=\"number\">0.15</span> + <span class=\"number\">0.85</span> * _)</div><div class=\"line\">&#125;</div><div class=\"line\">ranks.collect()</div></pre></td></tr></table></figure>\n<p>最终结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">res15: Array[(Char, Double)] = Array((B,0.4613200524321036), (D,1.3705281840649928), (A,1.4357617405523626), (C,0.7323900229505396))</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"2-1-Spark-RDD操作\"><a href=\"#2-1-Spark-RDD操作\" class=\"headerlink\" title=\"2.1 Spark RDD操作\"></a>2.1 Spark RDD操作</h1><h2 id=\"2-1-1-RDD是什么？\"><a href=\"#2-1-1-RDD是什么？\" class=\"headerlink\" title=\"2.1.1 RDD是什么？\"></a>2.1.1 RDD是什么？</h2><p>弹性分布式数据集RDD是Spark中的抽象数据结构类型，任何数据在Spark中都被表示为RDD。</p>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RDD</span>[<span class=\"type\">T</span>: <span class=\"type\">ClassTag</span>](<span class=\"params\"></div><div class=\"line\">    @transient private var _sc: <span class=\"type\">SparkContext</span>,</div><div class=\"line\">    @transient private var deps: <span class=\"type\">Seq</span>[<span class=\"type\">Dependency</span>[_]]</div><div class=\"line\">  </span>) <span class=\"keyword\">extends</span> <span class=\"title\">Serializable</span> <span class=\"keyword\">with</span> <span class=\"title\">Logging</span></span></div></pre></td></tr></table></figure>\n<p>RDD还提供了一组丰富的操作来操作这些数据。在这些操作中，诸如map、flatMap、filter等转换操作实现了monad模式，很好地契合了Scala的集合操作。除此之外，RDD还提供了诸如join、groupBy、reduceByKey等更为方便的操作（注意，reduceByKey是action，而非transformation），以支持常见的数据运算。RDD可以简单看成是一个数组。和普通数组的区别是，RDD中的数据是分区存储的，这样不同分区的数据就可以分布在不同的机器上，同时可以被并行处理。因此，Spark应用程序所做的就是把需要处理的数据转换为RDD，然后对RDD进行一系列的变换和操作从而得到结果。RDD的接口只支持粗粒度的操作，一个操作会被应用到RDD上所有的数据上。</p>\n<h2 id=\"2-1-2-RDD基本转换操作\"><a href=\"#2-1-2-RDD基本转换操作\" class=\"headerlink\" title=\"2.1.2 RDD基本转换操作\"></a>2.1.2 RDD基本转换操作</h2><ul>\n<li>map操作将RDD中类型为T的元素一对一的映射为类型为U的元素</li>\n</ul>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">map</span></span>[<span class=\"type\">U</span>: <span class=\"type\">ClassTag</span>](f: <span class=\"type\">T</span> =&gt; <span class=\"type\">U</span>): <span class=\"type\">RDD</span>[<span class=\"type\">U</span>] = withScope &#123;</div><div class=\"line\">  <span class=\"keyword\">val</span> cleanF = sc.clean(f)</div><div class=\"line\">  <span class=\"keyword\">new</span> <span class=\"type\">MapPartitionsRDD</span>[<span class=\"type\">U</span>, <span class=\"type\">T</span>](<span class=\"keyword\">this</span>, (context, pid, iter) =&gt; iter.map(cleanF))</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>举例</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">scala&gt; var rdd = sc.makeRDD(1 to 5, 1)</div><div class=\"line\">rdd: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[1] at makeRDD at &lt;console&gt;:21</div><div class=\"line\">scala&gt; rdd.collect()</div><div class=\"line\">res2: Array[Int] = Array(1, 2, 3, 4, 5)</div><div class=\"line\">scala&gt; val mapRDD = rdd.map(x =&gt; x.toFloat)</div><div class=\"line\">mapRDD: org.apache.spark.rdd.RDD[Float] = MapPartitionsRDD[2] at map at &lt;console&gt;:23</div><div class=\"line\">scala&gt; mapRDD.collect()</div><div class=\"line\">res3: Array[Float] = Array(1.0, 2.0, 3.0, 4.0, 5.0)</div></pre></td></tr></table></figure>\n<ul>\n<li>distinct操作返回RDD中所有不一样的元素</li>\n</ul>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">distinct</span></span>(numPartitions: <span class=\"type\">Int</span>)(<span class=\"keyword\">implicit</span> ord: <span class=\"type\">Ordering</span>[<span class=\"type\">T</span>] = <span class=\"literal\">null</span>): <span class=\"type\">RDD</span>[<span class=\"type\">T</span>] = withScope &#123;</div><div class=\"line\">  map(x =&gt; (x, <span class=\"literal\">null</span>)).reduceByKey((x, y) =&gt; x, numPartitions).map(_._1)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>flatMap操作将RDD中每一个元素进行一对多转换</li>\n</ul>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">flatMap</span></span>[<span class=\"type\">U</span>: <span class=\"type\">ClassTag</span>](f: <span class=\"type\">T</span> =&gt; <span class=\"type\">TraversableOnce</span>[<span class=\"type\">U</span>]): <span class=\"type\">RDD</span>[<span class=\"type\">U</span>] = withScope &#123;</div><div class=\"line\">  <span class=\"keyword\">val</span> cleanF = sc.clean(f)</div><div class=\"line\">  <span class=\"keyword\">new</span> <span class=\"type\">MapPartitionsRDD</span>[<span class=\"type\">U</span>, <span class=\"type\">T</span>](<span class=\"keyword\">this</span>, (context, pid, iter) =&gt; iter.flatMap(cleanF))</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>  举例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">scala&gt; val flatMapRDD = rdd.flatMap(x =&gt; 1 to x)</div><div class=\"line\">flatMapRDD: org.apache.spark.rdd.RDD[Int] = MapPartitionsRDD[3] at flatMap at &lt;console&gt;:23</div><div class=\"line\">scala&gt; flatMapRDD.collect()</div><div class=\"line\">res4: Array[Int] = Array(1, 1, 2, 1, 2, 3, 1, 2, 3, 4, 1, 2, 3, 4, 5)</div></pre></td></tr></table></figure></p>\n<ul>\n<li>filter操作对RDD中的元素进行过滤</li>\n</ul>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">filter</span></span>(f: <span class=\"type\">T</span> =&gt; <span class=\"type\">Boolean</span>): <span class=\"type\">RDD</span>[<span class=\"type\">T</span>] = withScope &#123;</div><div class=\"line\">  <span class=\"keyword\">val</span> cleanF = sc.clean(f)</div><div class=\"line\">  <span class=\"keyword\">new</span> <span class=\"type\">MapPartitionsRDD</span>[<span class=\"type\">T</span>, <span class=\"type\">T</span>](</div><div class=\"line\">    <span class=\"keyword\">this</span>,</div><div class=\"line\">    (context, pid, iter) =&gt; iter.filter(cleanF),</div><div class=\"line\">    preservesPartitioning = <span class=\"literal\">true</span>)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"2-1-3-键值RDD转换操作\"><a href=\"#2-1-3-键值RDD转换操作\" class=\"headerlink\" title=\"2.1.3 键值RDD转换操作\"></a>2.1.3 键值RDD转换操作</h2><ul>\n<li>combineByKey、foldByKey、reduceByKey、groupByKey这四种操作类型，都是针对RDD[K, V]进行，最终会归结为combineByKey的操作上。<br>combineByKey的内部实现分成三部分来完成：</li>\n</ul>\n<ol>\n<li><p>首先，根据是否需要在map端进行combine操作决定是否对RDD进行一次mapPartitions操作，从而减少shuffle的数据量。</p>\n</li>\n<li><p>第2步根据partitioner函数对MapPartitionsRDD进行shuffle操作。</p>\n</li>\n<li><p>最后对suffle的结果进行combine操作。</p>\n</li>\n</ol>\n<ul>\n<li>join、leftOuterJoin、rightOuterJoin针对RDD[K, V]中K值相等的连接操作，最终归结为cogroup来实现。</li>\n</ul>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cogroup</span></span>[<span class=\"type\">W</span>](other: <span class=\"type\">RDD</span>[(<span class=\"type\">K</span>, <span class=\"type\">W</span>)], partitioner: <span class=\"type\">Partitioner</span>)</div><div class=\"line\">    : <span class=\"type\">RDD</span>[(<span class=\"type\">K</span>, (<span class=\"type\">Iterable</span>[<span class=\"type\">V</span>], <span class=\"type\">Iterable</span>[<span class=\"type\">W</span>]))] = self.withScope &#123;</div><div class=\"line\">  <span class=\"keyword\">if</span> (partitioner.isInstanceOf[<span class=\"type\">HashPartitioner</span>] &amp;&amp; keyClass.isArray) &#123;</div><div class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"type\">SparkException</span>(<span class=\"string\">\"Default partitioner cannot partition array keys.\"</span>)</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">val</span> cg = <span class=\"keyword\">new</span> <span class=\"type\">CoGroupedRDD</span>[<span class=\"type\">K</span>](<span class=\"type\">Seq</span>(self, other), partitioner)</div><div class=\"line\">  cg.mapValues &#123; <span class=\"keyword\">case</span> <span class=\"type\">Array</span>(vs, w1s) =&gt;</div><div class=\"line\">    (vs.asInstanceOf[<span class=\"type\">Iterable</span>[<span class=\"type\">V</span>]], w1s.asInstanceOf[<span class=\"type\">Iterable</span>[<span class=\"type\">W</span>]])</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>一个join操作会产生CoGroupRDD、MapValuesRDD、FlatMapValuesRDD三个RDD。</p>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">join</span></span>[<span class=\"type\">W</span>](other: <span class=\"type\">RDD</span>[(<span class=\"type\">K</span>, <span class=\"type\">W</span>)], partitioner: <span class=\"type\">Partitioner</span>): <span class=\"type\">RDD</span>[(<span class=\"type\">K</span>, (<span class=\"type\">V</span>, <span class=\"type\">W</span>))] = self.withScope &#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>.cogroup(other, partitioner).flatMapValues( pair =&gt;</div><div class=\"line\">    <span class=\"keyword\">for</span> (v &lt;- pair._1.iterator; w &lt;- pair._2.iterator) <span class=\"keyword\">yield</span> (v, w)</div><div class=\"line\">  )</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"2-1-4-RDD依赖关系\"><a href=\"#2-1-4-RDD依赖关系\" class=\"headerlink\" title=\"2.1.4 RDD依赖关系\"></a>2.1.4 RDD依赖关系</h2><p>因为RDD操作是粗粒度的，每一个转换操作都会产生一个新有RDD，所以前后的RDD就会形成前后依赖关系。Spark中有两种依赖类型，窄依赖（Narrow Dependenceis）和宽依赖（Wide Dependencies）。</p>\n<ul>\n<li><p>窄依赖，每一个父RDD的分区最多只被子RDD的一个分区所依赖，map、filter、union操作就会形成一个窄依赖</p>\n</li>\n<li><p>宽依赖，多个子RDD的分区会依赖于同一个父RDD的分区。两个RDD数据集之间进行join操作就会形成宽依赖。</p>\n</li>\n</ul>\n<h2 id=\"2-1-5-使用Spark实现PageRank算法\"><a href=\"#2-1-5-使用Spark实现PageRank算法\" class=\"headerlink\" title=\"2.1.5 使用Spark实现PageRank算法\"></a>2.1.5 使用Spark实现PageRank算法</h2><p>PageRank，网页排名，又称网页级别、Google左侧排名或佩奇排名，是一种由搜索引擎根据网页之间相互的超链接计算的技术，而作为网页排名的要素之一，以Google公司创办人拉里·佩奇（Larry Page）之姓来命名。Google用它来体现网页的相关性和重要性，在搜索引擎优化操作中是经常被用来评估网页优化的成效因素之一。</p>\n<p>PageRank通过网络浩瀚的超链接关系来确定一个页面的等级。Google把从A页面到B页面的链接解释为A页面给B页面投票，Google根据投票来源（甚至来源的来源，即链接到A页面的页面）和投票目标的等级来决定新的等级。简单的说，一个高等级的页面可以使其他低等级页面的等级提升。[来源<a href=\"https://zh.wikipedia.org/wiki/PageRank\">维基百科</a>]</p>\n<p>其算法原理如下：</p>\n<ol>\n<li>通过链接关系将网页构建成Web图，每个页面设置相同的PageRank值，初始一般为1。</li>\n<li>将每一个网页的权重贡献发送给相邻的网页，权重贡献=权重/指向的URL个数</li>\n<li>对天每一个网页，将收到的权重贡献相加记为contribs，重新计算权重rank=0.15 + contribs*0.85</li>\n<li>迭代1、2、3，直到收敛。</li>\n</ol>\n<p>利用Spark的各种操作方法，可以方便的实现PageRank算法，实现如下：</p>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">val</span> <span class=\"type\">MAX_ITERATION</span> = <span class=\"number\">20</span></div><div class=\"line\"><span class=\"keyword\">val</span> links = sc.parallelize(<span class=\"type\">Array</span>(('<span class=\"type\">A</span>', <span class=\"type\">Array</span>('<span class=\"type\">D</span>')), ('<span class=\"type\">B</span>', <span class=\"type\">Array</span>('<span class=\"type\">A</span>')), ('<span class=\"type\">C</span>', <span class=\"type\">Array</span>('<span class=\"type\">A</span>', '<span class=\"type\">B</span>')), ('<span class=\"type\">D</span>', <span class=\"type\">Array</span>('<span class=\"type\">A</span>', '<span class=\"type\">C</span>'))), <span class=\"number\">2</span>).map(x =&gt; (x._1,x._2)).cache()</div><div class=\"line\"><span class=\"keyword\">var</span> ranks = sc.parallelize(<span class=\"type\">Array</span>(('<span class=\"type\">A</span>', <span class=\"number\">1.0</span>), ('<span class=\"type\">B</span>', <span class=\"number\">1.0</span>), ('<span class=\"type\">C</span>', <span class=\"number\">1.0</span>), ('<span class=\"type\">D</span>', <span class=\"number\">1.0</span>)), <span class=\"number\">2</span>)</div><div class=\"line\"><span class=\"keyword\">for</span> (i &lt;- <span class=\"number\">1</span> to <span class=\"type\">MAX_ITERATION</span>) &#123;</div><div class=\"line\">  <span class=\"keyword\">val</span> contribs = links.join(ranks, <span class=\"number\">2</span>).flatMap &#123;</div><div class=\"line\">    <span class=\"keyword\">case</span> (url, (links, rank)) =&gt; links.map(dest =&gt; (dest, rank/links.size))</div><div class=\"line\">  &#125;</div><div class=\"line\">  ranks = contribs.reduceByKey(_ + _, <span class=\"number\">2</span>).mapValues(<span class=\"number\">0.15</span> + <span class=\"number\">0.85</span> * _)</div><div class=\"line\">&#125;</div><div class=\"line\">ranks.collect()</div></pre></td></tr></table></figure>\n<p>最终结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">res15: Array[(Char, Double)] = Array((B,0.4613200524321036), (D,1.3705281840649928), (A,1.4357617405523626), (C,0.7323900229505396))</div></pre></td></tr></table></figure>\n"},{"title":"system log extract from chromium code","date":"2016-07-15T08:33:10.000Z","_content":"\nglog是Google的一个应用程序的日志库。它提供基于C++风格的流的日志API，以及各种辅助的宏。打印日志只需以流的形式传给 LOG(level) ，例如：\n```cpp\nVLOG(INFO) << \"File Path: \" << file_path;\n```\n","source":"_posts/system-log-extract-from-chromium-code-md.md","raw":"---\ntitle: system log extract from chromium code\ndate: 2016-07-15 16:33:10\ntags:\ncategories:\n---\n\nglog是Google的一个应用程序的日志库。它提供基于C++风格的流的日志API，以及各种辅助的宏。打印日志只需以流的形式传给 LOG(level) ，例如：\n```cpp\nVLOG(INFO) << \"File Path: \" << file_path;\n```\n","slug":"system-log-extract-from-chromium-code-md","published":1,"updated":"2016-08-05T14:19:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhwk4fj000e2grcb99d4810","content":"<p>glog是Google的一个应用程序的日志库。它提供基于C++风格的流的日志API，以及各种辅助的宏。打印日志只需以流的形式传给 LOG(level) ，例如：<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">VLOG(INFO) &lt;&lt; <span class=\"string\">\"File Path: \"</span> &lt;&lt; file_path;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>glog是Google的一个应用程序的日志库。它提供基于C++风格的流的日志API，以及各种辅助的宏。打印日志只需以流的形式传给 LOG(level) ，例如：<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">VLOG(INFO) &lt;&lt; <span class=\"string\">\"File Path: \"</span> &lt;&lt; file_path;</div></pre></td></tr></table></figure></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cirhwk4eu00012grc034lhf60","category_id":"cirhwk4f700052grc8l3g37ky","_id":"cirhwk4fi000d2grckniclp0a"},{"post_id":"cirhwk4f100032grcgfq67e8z","category_id":"cirhwk4f700052grc8l3g37ky","_id":"cirhwk4fm000i2grcsdkg7jx6"},{"post_id":"cirhwk4f800062grcucy54te0","category_id":"cirhwk4fk000f2grcwhlwhoci","_id":"cirhwk4fo000n2grct14u2hdg"},{"post_id":"cirhwk4f900072grc693wojp7","category_id":"cirhwk4fn000k2grchjch40g7","_id":"cirhwk4fo000q2grcespqa5vi"},{"post_id":"cirhwk4fb00092grchf0hvqr1","category_id":"cirhwk4fo000o2grcgyb5nbql","_id":"cirhwk4fr000t2grc3fjfqlo0"},{"post_id":"cirhwk4fg000c2grc0qtt8ujl","category_id":"cirhwk4fo000o2grcgyb5nbql","_id":"cirhwk4fs000w2grc886hlyuc"}],"PostTag":[{"post_id":"cirhwk4f900072grc693wojp7","tag_id":"cirhwk4f400042grc0fee3hdm","_id":"cirhwk4fg000b2grc1mejoo61"},{"post_id":"cirhwk4eu00012grc034lhf60","tag_id":"cirhwk4f400042grc0fee3hdm","_id":"cirhwk4fm000h2grcjtufz85n"},{"post_id":"cirhwk4eu00012grc034lhf60","tag_id":"cirhwk4fb00082grcvob876n8","_id":"cirhwk4fn000j2grc27kv4h7g"},{"post_id":"cirhwk4f100032grcgfq67e8z","tag_id":"cirhwk4fk000g2grcxh3jfdd9","_id":"cirhwk4fo000m2grcae41ovlw"},{"post_id":"cirhwk4f800062grcucy54te0","tag_id":"cirhwk4fn000l2grckx1866cr","_id":"cirhwk4fs000v2grc9lalpyj0"},{"post_id":"cirhwk4f800062grcucy54te0","tag_id":"cirhwk4fo000p2grcdmzyr9p8","_id":"cirhwk4ft000x2grc848ytxsu"},{"post_id":"cirhwk4f800062grcucy54te0","tag_id":"cirhwk4fq000s2grcmnncbpkl","_id":"cirhwk4ft000z2grc4jd9t9is"},{"post_id":"cirhwk4fb00092grchf0hvqr1","tag_id":"cirhwk4fs000u2grc2f0oporx","_id":"cirhwk4fu00112grclf4dpg77"},{"post_id":"cirhwk4fb00092grchf0hvqr1","tag_id":"cirhwk4ft000y2grcfkgtagds","_id":"cirhwk4fu00122grcab7ce9m4"},{"post_id":"cirhwk4fg000c2grc0qtt8ujl","tag_id":"cirhwk4fs000u2grc2f0oporx","_id":"cirhwk4fu00132grce2c66ezx"}],"Tag":[{"name":"Markdown","_id":"cirhwk4f400042grc0fee3hdm"},{"name":"github","_id":"cirhwk4fb00082grcvob876n8"},{"name":"推荐系统","_id":"cirhwk4fk000g2grcxh3jfdd9"},{"name":"leveldb","_id":"cirhwk4fn000l2grckx1866cr"},{"name":"redis","_id":"cirhwk4fo000p2grcdmzyr9p8"},{"name":"cache_server","_id":"cirhwk4fq000s2grcmnncbpkl"},{"name":"Spark","_id":"cirhwk4fs000u2grc2f0oporx"},{"name":"Spark MLlib","_id":"cirhwk4ft000y2grcfkgtagds"}]}}